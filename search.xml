<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Elasticsearch</title>
    <url>/2023/08/11/Elasticsearch/</url>
    <content><![CDATA[<p>{<br>    “mappings”:{<br>        “properties”:{<br>            “id”:{<br>                “type”:”keyword”<br>            },<br>            “name”:{<br>                “type”:”text”,<br>                “analyzer”:”ik_max_word”,<br>                “copy_to”:”all”<br>            },<br>            “type”:{<br>                “type”:”keyword”<br>            },<br>            “description”:{<br>                “type”:”text”,<br>                “analyzer”:”ik_max_word”,<br>                “copy_to”:”all”<br>            },<br>            “all”:{<br>                “type”:”text”,<br>                “analyzer”:”ik_max_word”</p>
<pre><code>        &#125;
    &#125;
&#125;
</code></pre>
<p>}</p>
<p>{<br>    “books”: {<br>        “aliases”: {},<br>        “mappings”: {<br>            “properties”: {<br>                “all”: {<br>                    “type”: “text”,<br>                    “analyzer”: “ik_max_word”<br>                },<br>                “description”: {<br>                    “type”: “text”,<br>                    “copy_to”: [<br>                        “all”<br>                    ],<br>                    “analyzer”: “ik_max_word”<br>                },<br>                “id”: {<br>                    “type”: “keyword”<br>                },<br>                “name”: {<br>                    “type”: “text”,<br>                    “copy_to”: [<br>                        “all”<br>                    ],<br>                    “analyzer”: “ik_max_word”<br>                },<br>                “type”: {<br>                    “type”: “keyword”<br>                }<br>            }<br>        },<br>        “settings”: {<br>            “index”: {<br>                “routing”: {<br>                    “allocation”: {<br>                        “include”: {<br>                            “_tier_preference”: “data_content”<br>                        }<br>                    }<br>                },<br>                “number_of_shards”: “1”,<br>                “provided_name”: “books”,<br>                “creation_date”: “1685976593848”,<br>                “number_of_replicas”: “1”,<br>                “uuid”: “EQm8uf0JR3yLK7TvmxMlZg”,<br>                “version”: {<br>                    “created”: “7160299”<br>                }<br>            }<br>        }<br>    }<br>}</p>
<p>{<br>    “id”:1,<br>    “name”:”springboot”,<br>    “type”:”springboot”,<br>    “description”:”springboot”<br>}</p>
<p>localhost:9200&#x2F;books&#x2F;_doc&#x2F;2</p>
]]></content>
      <tags>
        <tag>Elasticsearch</tag>
      </tags>
  </entry>
  <entry>
    <title>Java内存模型</title>
    <url>/2023/08/09/Java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B/</url>
    <content><![CDATA[<p>Java内存模型（Java Memory Model，JMM）是一种规范，用于定义在多线程环境中，Java程序中的线程如何与主内存和各自的工作内存进行交互和访问共享数据。JMM确保了在多线程编程中的可见性、原子性、有序性等方面的一致性，以防止出现并发访问共享数据时可能出现的问题，如竞态条件（Race Conditions）、死锁（Deadlocks）等。</p>
<p>以下是JMM中的一些关键概念：</p>
<ol>
<li><p>主内存（Main Memory）：主内存是所有线程共享的内存区域，存储了程序中的共享变量和数据。</p>
</li>
<li><p>工作内存（Working Memory）：每个线程都有自己的工作内存，线程的工作内存包含了该线程需要使用的变量的副本，这些副本在线程执行过程中进行读写。</p>
</li>
<li><p>可见性（Visibility）：JMM确保一个线程对共享变量的修改对其他线程是可见的。这意味着当一个线程修改了一个共享变量的值，其他线程在读取该变量时能够看到最新的值。</p>
</li>
<li><p>原子性（Atomicity）：JMM保证一些特定操作以原子方式执行，即要么完全执行，要么完全不执行。例如，对一个基本数据类型的读写操作是原子性的。</p>
</li>
<li><p>有序性（Ordering）：JMM定义了一些规则来保证操作的执行顺序对所有线程都是一致的。这是为了避免由于指令重排等导致的程序执行顺序混乱问题。</p>
</li>
<li><p>volatile关键字：在Java中，使用volatile关键字可以确保变量的可见性和一定程度的有序性。对volatile变量的写操作会立即刷新到主内存，对volatile变量的读操作会从主内存中获取最新的值。</p>
</li>
<li><p>synchronized关键字：使用synchronized关键字可以创建一个临界区，确保多个线程在同一时间只有一个能够进入临界区执行，从而保证了数据的一致性和避免竞态条件。</p>
</li>
<li><p>final关键字：使用final关键字可以保证在构造函数执行完成后，其他线程能够看到已经构造好的对象。</p>
</li>
</ol>
<p>总之，Java内存模型为多线程编程提供了一组规则和约定，确保了在多线程环境下共享数据的正确性和一致性。程序员可以依靠这些规则来编写正确且高效的多线程程序。</p>
]]></content>
      <tags>
        <tag>Java内存模型</tag>
      </tags>
  </entry>
  <entry>
    <title>docker</title>
    <url>/2023/08/11/docker/</url>
    <content><![CDATA[<h3 id="使用Docker"><a href="#使用Docker" class="headerlink" title="使用Docker"></a>使用Docker</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1、yum 包更新到最新</span> </span><br><span class="line">yum update</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2、安装需要的软件包， yum-util 提供yum-config-manager功能，另外两个是devicemapper驱动依赖的</span> </span><br><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">3、 设置yum源</span></span><br><span class="line">yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">4、 安装docker，出现输入的界面都按 y</span> </span><br><span class="line">yum install -y docker-ce</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">5、 查看docker版本，验证是否验证成功</span></span><br><span class="line">docker -v</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"> 配置阿里镜像加速</span></span><br><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://p4intcvz.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动docker</span></span><br><span class="line">systemctl  start docker</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看docker</span></span><br><span class="line">systemctl  status  docker</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"> 查看镜像</span></span><br><span class="line">docker images</span><br><span class="line">docker images -q</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"> 搜索镜像</span></span><br><span class="line">docker search 镜像名称</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"> 拉取镜像</span></span><br><span class="line">docker pull 镜像名称:版本号   (在hub.docker.com找)</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">删除镜像</span></span><br><span class="line">docker rmi 镜像id  </span><br><span class="line">docker rmi `docker 	images -q`</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建容器(退出后会自动关闭)</span></span><br><span class="line">docker run -it --name=cl  centos:7  /bin/bash</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">退出容器</span></span><br><span class="line">exit</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看现在运行的容器</span></span><br><span class="line">docker ps</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看历史运行的容器</span></span><br><span class="line">docker ps -a</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建容器(退出后不会自动关闭)</span></span><br><span class="line">docker run -id --name=cl  centos:7  /bin/bash</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">进入运行容器的内部</span></span><br><span class="line">docker exec -it  容器id  /bin/bash</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">运行已经有的容器</span></span><br><span class="line">docker start 容器id</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">停止容器</span></span><br><span class="line">docker stop 容器名称</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除容器</span></span><br><span class="line">docker rm  容器id</span><br><span class="line">docker rm  `docker ps -aq`</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看容器信息</span></span><br><span class="line">docker inspect 容器名称</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建数据卷</span></span><br><span class="line">docker run -it --name=cl -v 宿主机目录:容器内目录   centos:7  /bin/bash</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">使用docker镜像nginx:latest以后台模式启动一个容器,并将容器命名为mynginx。</span></span><br><span class="line">docker run --name mynginx -d nginx:latest</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">容器转镜像</span></span><br><span class="line">docker commit 容器id 自己命名:自己命名版本  (数据卷的不会生效)</span><br></pre></td></tr></table></figure>

<p><strong>1、命令行界面输入命令“systemctl <a href="https://so.csdn.net/so/search?q=status&spm=1001.2101.3001.7020">status</a> firewalld.service”并按下回车键。</strong></p>
<p><strong>2、然后在下方可度以查看得到“active（running）”，此时说明防火墙已经被打开了。</strong></p>
<p><strong>3、在命令行中输入systemctl stop firewalld.service命令，进行关闭防火墙。</strong></p>
<p><strong>4、然后再使用命令systemctl status firewalld.service，在下方出现disavtive（dead），这权样就说明防火墙已经关闭。</strong></p>
<p><strong>5、再在命令行中输入命令“systemctl disable firewalld.service”命令，即可永久关闭防火墙。</strong></p>
<p>file: .&#x2F;config</p>
<p>file: .&#x2F;</p>
<p>classpath: &#x2F;config&#x2F;</p>
<p>classpath: &#x2F;</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">springboot项目中加打包插件</span></span><br><span class="line">&lt;build&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">        &lt;/plugins&gt;</span><br><span class="line">&lt;/build&gt;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">把springboot打包，把jar包文件放到root目录下面</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">docker-files文件夹</span></span><br><span class="line">mkdir docker-files</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">把jar包移动到docker-files文件夹中</span></span><br><span class="line">mv dockerspringboot-1.0-SNAPSHOT.jar ./docker-files/</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">进到docker-files文件夹下,编写dockerfile</span></span><br><span class="line">cd docker-files/</span><br><span class="line">vim springboot_dockerfile</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">dockerfile内容</span></span><br><span class="line">from java:8</span><br><span class="line">maintainer xiaoxiao &lt;xiaoxiao@it.com&gt;</span><br><span class="line">add dockerspringboot-1.0-SNAPSHOT.jar app.jar</span><br><span class="line">cmd java -jar app.jar</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">启动docker容器</span></span><br><span class="line">systemctl start docker</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">通过dockerfile构建</span></span><br><span class="line">docker build -f ./springboot_dockerfile -t app</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看镜像</span></span><br><span class="line">docker images</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建app01容器并启动</span></span><br><span class="line">docker run -id -p 8081:8080 --name=app01 app</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看运行的容器</span></span><br><span class="line">docker ps</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">ip加端口访问</span></span><br><span class="line">192.168.220.129:8081/hello</span><br></pre></td></tr></table></figure>













]]></content>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>git02</title>
    <url>/2023/08/11/git02/</url>
    <content><![CDATA[<p>git  init<br>git clone<br>git add 文件或者目录<br>git rm 文件或者目录<br>git rm –cache 文件或者目录<br>git commit -m “”<br>git status<br>git branch –list<br>git branch aaa<br>git checkout aaa<br>git log –pretty&#x3D;oneline</p>
]]></content>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git</title>
    <url>/2023/08/06/git/</url>
    <content><![CDATA[<p>git status<br>git add 文件<br>git rm –cached 文件<br>git commit -m “提交说明”<br>git log<br>git log –oneline<br>git restore 文件<br>git reset –hard 要恢复的版本号<br>git revert 要恢复的上一个版本号<br>git branch 新的分支<br>git branch -v<br>git checkout 分支名称<br>git branch -d 分支名称<br>git tag<br>git tag 标签名 版本号<br>git tag -d 标签名</p>
<p>gitee远程仓库和本地仓库关联<br>git remote add origin <a href="mailto:&#103;&#x69;&#x74;&#64;&#x67;&#x69;&#x74;&#101;&#x65;&#x2e;&#99;&#111;&#109;">&#103;&#x69;&#x74;&#64;&#x67;&#x69;&#x74;&#101;&#x65;&#x2e;&#99;&#111;&#109;</a>:abc&#x2F;abc.git</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git03</title>
    <url>/2023/08/11/git03/</url>
    <content><![CDATA[<p>先把github创建一个仓库，要跟用户名一样后面加.github.io<br>比如：xiaoxue1055.github.io<br>用hexo创建<br>npm install hexo-cli -g<br>hexo init blog<br>cd blog<br>npm install<br>hexo server</p>
]]></content>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>heima</title>
    <url>/2023/08/11/heima/</url>
    <content><![CDATA[<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Navicat Premium Data Transfer</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> Source Server         : mysql01</span></span><br><span class="line"><span class="comment"> Source Server Type    : MySQL</span></span><br><span class="line"><span class="comment"> Source Server Version : 80027</span></span><br><span class="line"><span class="comment"> Source Host           : localhost:3306</span></span><br><span class="line"><span class="comment"> Source Schema         : itheima_information</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> Target Server Type    : MySQL</span></span><br><span class="line"><span class="comment"> Target Server Version : 80027</span></span><br><span class="line"><span class="comment"> File Encoding         : 65001</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> Date: 07/02/2023 19:15:49</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> NAMES utf8mb4;</span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for heimacontent</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `heimacontent`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `heimacontent`  (</span><br><span class="line">  `java` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;黑马的内容部分&#x27;</span>,</span><br><span class="line">  `url` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;网盘的地址&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`java`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8_bin ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of heimacontent</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `heimacontent` <span class="keyword">VALUES</span> (<span class="string">&#x27;Java基础-20天学会Java&#x27;</span>, <span class="string">&#x27;https://pan.baidu.com/s/1rI7E3wL8E1Fj7cxYV_yQww?pwd=1234&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `heimacontent` <span class="keyword">VALUES</span> (<span class="string">&#x27;Maven从基础到高级应用&#x27;</span>, <span class="string">&#x27;https://pan.baidu.com/s/1Xpm49CXW2KVUa1K9AYQWzA?pwd=1234&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `heimacontent` <span class="keyword">VALUES</span> (<span class="string">&#x27;MySQL数据库&#x27;</span>, <span class="string">&#x27;https://pan.baidu.com/s/1zQ0AQn68WaLvihEEiX312A?pwd=1234&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `heimacontent` <span class="keyword">VALUES</span> (<span class="string">&#x27;Redis入门到实战教程&#x27;</span>, <span class="string">&#x27;https://pan.baidu.com/s/1189u6u4icQYHg_9_7ovWmA?pwd=eh11&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `heimacontent` <span class="keyword">VALUES</span> (<span class="string">&#x27;SSM框架Spring+SpringMVC+MyBatis全覆盖_S S M整合&#x27;</span>, <span class="string">&#x27;https://pan.baidu.com/s/1B0qofUEVZKZgHvZIG1xC4A?pwd=1234&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `heimacontent` <span class="keyword">VALUES</span> (<span class="string">&#x27;SpringBoot2全套&#x27;</span>, <span class="string">&#x27;https://pan.baidu.com/s/1z8I4IXEuYBepDYbg4ijzUw?pwd=1234&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `heimacontent` <span class="keyword">VALUES</span> (<span class="string">&#x27;全面学习Mybatis插件之Mybatis-Plus&#x27;</span>, <span class="string">&#x27;https://pan.baidu.com/s/1EzPtX8lYepOOBWG6JaXd9g?pwd=5678&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `heimacontent` <span class="keyword">VALUES</span> (<span class="string">&#x27;容器化技术Docker精讲&#x27;</span>, <span class="string">&#x27;https://pan.baidu.com/s/1PFkU9hh0yjMXcGwrpnvgMw?pwd=hhh2&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `heimacontent` <span class="keyword">VALUES</span> (<span class="string">&#x27;微服务开发框架SpringCloud+RabbitMQ+Docker+Redis+搜索+分布式微服务全技术栈课程&#x27;</span>, <span class="string">&#x27;https://pan.baidu.com/s/1zRmwSvSvoDkWh0-MynwERA?pwd=1234&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `heimacontent` <span class="keyword">VALUES</span> (<span class="string">&#x27;最新14天学会JavaWeb（高效学习版）&#x27;</span>, <span class="string">&#x27;https://pan.baidu.com/s/1OwoTxJvsQ6Ka4ZATBjhuHg?pwd=1234&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `heimacontent` <span class="keyword">VALUES</span> (<span class="string">&#x27;黑马程序员Git全套教程&#x27;</span>, <span class="string">&#x27;https://pan.baidu.com/s/12X-CVPV0X3F4lSsUL6gBhw?pwd=1234&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>heima</tag>
      </tags>
  </entry>
  <entry>
    <title>h文</title>
    <url>/2023/08/07/h%E6%96%87/</url>
    <content><![CDATA[<p>天注定，每个暑假都将是一段激情似火的日子..</p>
<p>描写了这么多九姐妹的故事，我们来换个方式，从另外的人说起..</p>
<p>说来也巧，白娜的弟弟白波和程倩在同一所大学读书，只是不一个系而已。放假了的白波给家里打了个电话，知道姐姐还没有回去，就决定先到舅舅家玩两天，然后再一起回家。由于买不到车票，索也多呆了几天，这才动身。</p>
<p>由于客流高峰已过，车厢里虽然乘客不算少，空位却也很多。白波上车依着号码找到座位，可惜是靠在走道边，虽然晚上完全看不到外面的景色，他还是盘算着，如果火车起动以後隔壁还空着的话，他就要坐过去右边靠窗的位置。</p>
<p>列车刚开动不久，有一个女孩从另一头打开车厢门进来，还一直往这头走来，白波暗想∶「不会吧」</p>
<p>结果她走到白波旁边说∶「对不起」</p>
<p>原来旁边真是这个女孩的位子。白波挪了挪腿，让她坐到里面。</p>
<p>这个女孩子身体高挑，短发俏丽，菱角嘴，秀挺的鼻子上架了一副细框变色眼镜，穿着白色衬衫，灰色ab裤剪裁得非常合身。</p>
<p>但是这女孩却非常冷酷，脸上一直没有任何表情，坐下来以後就从包包里拿出一本书来读着。白波看她那种孤傲的样子，跟她搭讪必然自讨没趣，</p>
<p>白波手上本来就拿着一份在车站买的杂志，便也看起来。偶而，他翻到刊着泳装的画页，不免仔细的多瞧两眼，却听见隔壁那女孩发出轻蔑的鼻哼。白波听到她的不屑，故意津津有味的掀来掀去，那女孩也不再管他，专心地读起自己的书。</p>
<p>白波看了一会儿，觉得累了，就闭上眼睛休息，没多久竟睡着了。</p>
<p>「对不起先生，请你坐过去好吗」在睡梦中有人推他。</p>
<p>白波睁开睡眼，发现自己的头仰倒在隔壁女孩肩上，她正满脸厌恶的瞄着他。白波虽然抱歉，却也生气，又不是什麽大不了的事，何必摆这种臭脸。他坐正身体，重新闭上眼睛，懒得理她。</p>
<p>他这回睡了很久，再醒来的时候，发现车厢里几乎已经没有旅客，大概是路途上慢慢下车走掉的。隔壁那女孩盖着一件外套在睡，他看了看表，已经是清晨四点多。</p>
<p>白波睡不着了，他无聊的又拿起那本杂志，心不在焉的浏览着。</p>
<p>他胡乱翻阅，忽然间肩头一重，原来是那女孩子倾睡到他身上来。白波正想推醒她，好狠狠的报复一下，看着她熟睡中微微颤动的睫毛，却觉得於心不忍。</p>
<p>那女孩在睡梦中一脸安详，白波看着她的脸，心想∶「这样不是很美吗何必老是板着脸板呢」</p>
<p>那女孩的额头圆润，月眉儿细细弯弯，长长的睫毛，细致光滑的脸颊，而最令白波神往的是她那诱人的嘴唇。这香唇上挺下厚，上唇缘曲线优美，弯成一付短弓，翘起的前端还微微结出颗艳淑，下唇圆而丰润，像还带着露珠的樱桃，这时上下唇虽然闭紧，还是在最中间发生一处小小的凹陷。</p>
<p>有时，那女孩轻轻吐出小舌湿润一下嘴唇，那舌尖滑过唇缝，暧昧又动人。又偶然，她略略蹙眉，嘴儿乍启，那整齐洁白的门牙轻咬着下唇，贝壳一样的嵌在鲜红的果上。白波看得痴迷，右手贴着椅背伸展到女孩的右侧将她搂起，心头蹦蹦乱跳，既慌且喜，想要轻举妄动，又不敢造次，一翻挣扎之後，终究还是把持不住，低头贴上她的嘴唇亲吻。</p>
<p>这女孩不知是否正好也梦见情人，当白波吻住她的时候，她蠕动着嘴儿回应，白波吃着她的上唇，她也含着白波的下唇，俩人互相吸吮，情意绵绵。</p>
<p>白波缓慢的啜动她的嘴，每一个地方都细心的舔之再三，那女孩被温柔的挑逗所困惑着，不自主的张开唇来，香舌探出，到处寻找对手。白波用牙齿轻轻的去咬，然後叼着那舌儿用自己的舌尖问候它，那女孩呼吸紊乱起来，舌头急急的全部伸出，白波也不客气的出力吸着，俩人舌头紧密的磨擦，白波甚至觉得味蕾上传来阵阵神秘的甜意。</p>
<p>接着白波也侵入那女孩的嘴里，和她缠绵酣战，那女孩不停地用力吞噬白波的舌，就像要将他咽下去一般，还吮得啧啧作响，白波心猿意马，正想进一步占领她的其它地方，手掌才刚握住她丰满的房，忽然有人拍着他的肩。</p>
<p>「对不起，查票」</p>
<p>这列车长是有点太勤劳了，现在来查票，白波一下子回过魂来，慌张的在口袋寻找车票，递给列车长，那女孩也睁开眼睛，茫然的看着白波和列车长，白波轻声跟她说∶「查票」</p>
<p>那女孩点点头，出车票也给剪过，列车长又看了他们一眼，摇摇头走了。</p>
<p>那女孩呆呆的望着白波，过了一会儿才说∶「你在做什麽」</p>
<p>这时候白波还搂着她，问∶「你说呢」</p>
<p>她真的搞不清楚状况，摇摇头希望清醒一些，忽然想起方才睡梦中的美感，顿时恍然大悟，满脸羞红，恶声说∶「你┅┅你欺负我」</p>
<p>「我是在疼你。」白波嘻皮笑脸的说，又伸手她的部。</p>
<p>那女孩气极了，反手就是一巴掌，打在白波的脸上，车厢中还有几名旅客，但都坐在很前面的地方，没发现这边的桃色纠纷。</p>
<p>白波被打得颊上又热又辣，双手用力，箍紧那女孩的上身，让她的手不能再乱动。那女孩恐惧的说∶「你┅┅你别碰我┅┅」</p>
<p>白波亲在她的脸庞上，又用自己的脸去磨她的脸，说∶「碰到了，怎麽办」</p>
<p>那女孩快哭了，颤声说∶「别┅┅我要┅┅我要叫了┅┅」</p>
<p>「你叫好了」白波说。他知道像她这样骄傲的女孩，都害怕丢脸，绝对不敢真的喧闹让大家知道，那是多羞人的事情。</p>
<p>她果然只是挣扎不敢叫喊，白波在她耳边亲着，说∶「你别动，让我亲亲。」</p>
<p>那女孩哪里肯，白波见她不就范，又说∶「亲完我就放了你。」</p>
<p>她听了之後，信以为真，慢慢放轻抗拒的力气，最後停下来。</p>
<p>白波咬着她的耳垂说∶「对，这才乖」</p>
<p>她耳边传来男人的喘息，耳垂又被白波舔得麻痒，不由得起了机伶伶的冷颤，缩着肩膀，白波放松手臂，温柔的揽住她的腰枝，嘴唇游移到她的脖子上，又伸舌去舔舐着。</p>
<p>她仰头枕着白波的肩，忍不住「嗯┅┅」了一声，感觉不妥，连忙问∶「你亲完了没」</p>
<p>白波重新吻回来她的耳朵，在她耳说∶「还没┅┅」</p>
<p>她怎能受的了，嘴上「啊┅┅」了一声，不由自主抓住白波的小臂。白波吃过了左耳，又来舔左耳，她已经浑身乏力，全凭白波抱着她，白波轻托过她的下颚，端详她的脸，她羞赧不已，白波将她一把拉近，再度吻上她的唇。</p>
<p>她双手无力的推在白波膛，白波吻得热烈，那双小手就逐渐攀上他的肩头，最後搂着白波的颈，主动的对吮起来。</p>
<p>白波趁她有反应，左手便去她右，她连忙缩手来拨，白波就去她左，她又来拨，白波再回到左，她来回几次摆脱不了，就听天由命不再理会他的手，专心的和白波吻着。</p>
<p>好不容易白波停下来换气，她将白波的脖子搂得紧紧的，呵喘着问∶「亲完了没有┅┅」</p>
<p>白波将她推倒在椅背上，低头去吻她的领口白，呜咽的说∶「还没」</p>
<p>白波色欲熏心，左手已经在解她的上衣钮扣，她上身不方便动，便扭起双腿抗议，大概白波裁定抗议无效，仍然进她的衬衫内。</p>
<p>白波直接撩起罩，贴握住她的双峰，用掌心去磨动她的头，一下子就硬了。</p>
<p>白波的嘴顺着部而下，来到头上舔着，她的头晕颜色都淡，淡到几乎分辨不出来和房的差异，被白波吸过後，才有一些些红润起来，白波手口并用，将她的部蹂躏个够。</p>
<p>这女孩仰头半闭着眼睛，双手捧着白波的头，她已经没有半点反抗的意思，不过为表达少女的矜持起见，她还是问∶「亲完了没」</p>
<p>白波突然抬头说∶「亲完了」</p>
<p>她一听十分意外，就愣愣的傻在那里，看着白波邪邪的表情，半晌才醒悟是白波故意捉弄她，不依的扭动上身，白波笑着回去舔她的房，她终於「啊┅┅」的满足叫起。</p>
<p>白波一边吃着她的，手已经在她的腿间索着，她的大腿细细的，感很，那是个敏感的地方，她摇动着臀部表达她的感受。白波隔着裤子虽然也得舒服，但是得不到成就感，就去拉她拉炼。</p>
<p>这次那女孩真的不肯，白波死拉活拉，用尽方法，那女孩护土有责，抵死不从。白波要她乖乖别挣扎，并且威胁她说∶「要不然别人听见或看见，多丢人啊」</p>
<p>她听了白波的话，才不甘愿的让他脱去长裤，白波警觉的探视四周，然後看着那双又长又细的美腿，说∶「你真美」</p>
<p>这女孩听了很高兴，但是又很担心，既担心被人看见，更担心白波，男人脱了女人的裤子还会安什麽好心</p>
<p>她穿了一件小小的白色三角裤，用料稀少，腰边只是一条细绳，配合她苗条的身段，的确很迷人，她的臀部小而结实，圆鼓鼓的相当诱人，前面阜处因为被她的手遮住，看不出所以然来。</p>
<p>白波又去吻她的唇，强行伸手在她的裤底部份探索，那女孩怕死了，双手一直保护着重要机密，白波武力侵入，到了潮湿的棉布，白波故意用手指在那里划圈，还偶而朝前突刺。</p>
<p>那女孩难以招架的发出哼声，白波怕她吵到别人，嘴巴封着她的唇一刻也不敢放掉，手指头已经撇开三角裤底，在户上擦着，展开巷战。</p>
<p>白波知道如何拿捏力量，他不轻不重的在她儿口勾勒，那女孩一直「唔┅┅」个不停，後来，白波将她用力一抱起，让她背对着自己，跨着跪坐到他身上，那女孩扶着前面的小桌，回头害怕的看着白波。白波她要将头转过去，不让她看，揽手到她户上又再不停掏扣，那女孩坐在他的身上发抖，腰杆紧张，不免就翘起屁股，白波爱怜的来回着，那女孩被弄的舒服，软软地趴在桌面上，白波解开自己裤子拉炼，拿出早就死硬的巴，又再将那女孩的内裤底扯开，用头去磨她唇。</p>
<p>那女孩一被头顶到，当然知道那是什麽东西，反而镇定下来，安静的感受和等待男人来侵略。</p>
<p>白波看她伏在前面桌面上不动，屁股黏在自己的胯间，姿态美妙，就按着她的臀侧往下压，让巴逐渐被儿吞下。</p>
<p>那女孩小嘴张开，很轻的「啊┅┅」一声，白波慢慢深入，她就一直「啊」着，後来她发现白波居然没完没了，不知道到底有多长，才疑惑的转头来看，这时白波刚好全没尽，将她的花心挤得水泄不通，那女孩气息慌乱，断续的说∶「你┅┅你┅┅好长啊┅┅」</p>
<p>白波笑着说∶「没试过吗来，要动了哦┅┅把嘴捂着。」</p>
<p>那女孩不知道为什麽要捂着，但还是听话的用手背掩了嘴，白波捧起她的臀部，一上一下的摇动起来，她才知道要捂嘴的原因，要不然那爽死人的美感，恐怕早已经高声叫出了。</p>
<p>那女孩身体轻，白波抛套起来非常省力，所以得又深又快，女孩自然也舒服得回肠荡气，可是偏偏不能叫，心儿又美得要命，便可怜的咬着自己的手背，发出急切的喘声。</p>
<p>白波低头便可以看见巴在户进出的样子，红红的唇因为抽而频频翻动，带出来一股股的浪水，那女孩的反应真好，没多久白波就发现他的手可以不必出力，完全是那女孩自己在摇着屁股挺动。</p>
<p>那女孩陶醉的上下骑个不停，越弄越快，忽然一屁股坐到底，浑身发抖好像在哭泣，白波连忙也将巴上挺，原她来高潮了。</p>
<p>白波不想让她休息，马上又动手将她捧着套起来，还恶劣的拿拇指在她肛门口按捺，那肛门收缩的排斥他，白波弄了一些水涂在上面，再一用力，半截拇指就进肛门去了。</p>
<p>「噢┅┅」那女孩终於叫出声来。</p>
<p>忽然另一头有一个乘客站起来倒水喝，俩人赶紧停下来，等那人又坐回去，白波才偷偷回复动作，女孩回头不满的瞪他一眼。</p>
<p>白波见她感觉强烈，不敢再过份刺激她，但是进去的一截拇指还是让她夹在那里，他挺动巴，专心的她的。</p>
<p>那女孩很不济，才没多久又泄了第二次，同时失去体力，软豁得像鳝鱼一样，让白波没法再干。白波只好将她摆回她的座位，放低她的身体，替她脱去三角裤，她还是做作的假意抗拒，白波俯身到她上面，肩起她的两腿，巴重新进户，更快速的干起来。</p>
<p>那女孩腿儿纤细，双膝可以弯曲到前，让白波得又深又密，不断的顶在她子口，引起膣连带的收缩，夹得白波舒服透了，不免更卖力的抽，让她不停的喷出浪水，浸湿了椅垫。</p>
<p>那女孩也不知道是舒服还是难过，咬牙切齿，紧蹙眉头，白波看了不忍心，就又去吻她，她像荒漠遇甘霖一样，贪婪的吸着白波的唇，白波将巴动得飞快，那女孩「唔┅┅唔┅┅」不停，儿连缩，又来一次高潮。</p>
<p>这回她真的不行了，一直摇头告诉白波她投降，白波也不强人所难，拔出巴躺回椅子上，那女孩虽然已经全身瘫痪，一双媚眼却睁得老大，在看白波的巴。白波也慵懒的靠在椅背上休息，那女孩伸来左手在巴上着，很讶异它的大，白波将她拥起，她幽幽的说∶「你好哦。」</p>
<p>白波抚着自己的脸颊说∶「可是你刚才还打我。」</p>
<p>「当然要打啊，你那麽坏欺负我。」她说。</p>
<p>这时候天色已渐渐亮起，白波贴着她的脸，温柔亲吻她的腮，她心满意足的闭起眼睛。一会儿之後，女孩休息够了，找来面纸擦乾净身体，羞涩的扣上衣服穿回裤子，白波还是挺着巴坐在那里。</p>
<p>她看白波直立的巴，笨笨的问∶「你怎麽办」</p>
<p>白波巴不得她有此一问，马上说∶「你舔我好不好」</p>
<p>女孩摇头说她不会，白波就教导起她来。他要她伏下，右手握着巴，用舌头去舔头，那女孩起先不敢，还连连作呕，白波说好说歹，她才轻轻尝了一下，发现也没什麽太不好的味道，终於慢慢的吃起来。</p>
<p>白波指导她怎麽让男人舒服，她也用心的学着，白波猜她一定是有男朋友，练好了不晓得会便宜谁。</p>
<p>她一边含着，还一边抬头来瞧白波的反应，白波也看着她妩媚吊起的眼珠，他现在相信了，三白眼果真是荡的象徵。</p>
<p>她又舔又套，白波虽然仍是坚硬而迟顿，毕竟不是铁人，终於连连悸动，出来，第一道进那女孩嘴里，她赶快吐出巴，接下来的就都在她脸上，她眨着眼承受着，等白波完。</p>
<p>「噢┅┅真舒服┅┅」白波赞美她。</p>
<p>她为白波拭去，温柔的替他穿好裤子。</p>
<p>白波再将她搂起，想再吻她，她指指自己得嘴说∶「有你的那个┅┅」</p>
<p>白波无所谓，还是吻上去。俩人在座位上紧紧的相拥，像情侣般的相互依恋，磨蹭不停。</p>
<p>到目的地了，进站之前，白波问她∶「对了，我叫白波，你呢」</p>
<p>「程倩」她说。</p>
<p>原来她就是程万宗的女儿，说来也巧，她和白波在同一所大学，只是不一个系而已。程倩和白波一样也刚上完了大一，放假了。由于贪恋和交往了半年的男朋友宗伟也就是刘梅的表弟，和程倩同班在一起的日子，在校多待了几天，才依依不舍的回家。</p>
<p>白波一问，他和程倩居然同校，她也笑的很开心，要了白波的电话，也给白波留了自己的电话。</p>
<p>「不过┅┅我┅┅我有女朋友哦┅┅」白波提醒她。</p>
<p>「没关系，」她笑了，是那麽的温柔灿烂，昨晚的骄傲盛气一点也看不见了∶「我也有男朋友。」</p>
<p>车厢广播传来进站的通知，火车停靠月台，他们提了行李下车，走出车站，程倩不舍的吻了白波，道别而去。</p>
<p>程倩到了家一看，家里一个人也没有，她知道妈妈是去上班了。胡乱的在冰箱里找了点吃了，消灭掉。</p>
]]></content>
      <tags>
        <tag>h文</tag>
      </tags>
  </entry>
  <entry>
    <title>idea</title>
    <url>/2023/08/06/idea/</url>
    <content><![CDATA[<p>main方法          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;psvm<br>输出方法           &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sout<br>复制一行           &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl + d<br>一行代码上、下移动          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctrl +shift + ↑ 或者 ↓<br>导包，生成变量          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alt + enter<br>单行注释或者取消         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ctrl + &#x2F;<br>多行注释或者取消         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ctrl + shift + &#x2F;<br>处理异常           &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ctrl + alt + t<br>构造方法           &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; alt + insert<br>idea          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;debug<br>折现蓝色箭头单步执行，会把方法当做一行代码执行，不会进入方法<br>向下的蓝色箭头﹐单步执行，但会进入自定义的方法，不会进入jdk源码的方法<br>向下的红色箭头单步执行，但是会进入jdk自带的方法<br>向上的蓝色箭头跳出当前所在的方法<br>斜着的蓝色箭头执行到光标所在的行<br>左侧绿色三角执行到下一个断点</p>
<p>整理了一些IDEA开发常用的快捷键：</p>
<table>
<thead>
<tr>
<th>快捷键组合</th>
<th>实现效果</th>
</tr>
</thead>
<tbody><tr>
<td>psvm + Tab键 &#x2F; main + Tab键</td>
<td>public static void main(String[] args)</td>
</tr>
<tr>
<td>sout + Tab键</td>
<td>System.out.println()</td>
</tr>
<tr>
<td>Ctrl + X</td>
<td>删除当前行</td>
</tr>
<tr>
<td>Ctrl +D</td>
<td>复制当前行</td>
</tr>
<tr>
<td>Alt+Insert(或右键Generate)</td>
<td>生成代码(如get,set方法,构造函数等)</td>
</tr>
<tr>
<td>Ctrl+Alt+T</td>
<td>生成try catch （或者 Alt+enter选择）</td>
</tr>
<tr>
<td>CTRL+ALT+T</td>
<td>把选中的代码放在 TRY{} IF{} ELSE{} 里</td>
</tr>
<tr>
<td>Ctr+shift+U</td>
<td>实现大小写之间的转化</td>
</tr>
<tr>
<td>ALT+回车</td>
<td>导入包,自动修正</td>
</tr>
<tr>
<td>CTRL+ALT+L</td>
<td>格式化代码</td>
</tr>
<tr>
<td>CTRL+ALT+I</td>
<td>自动缩进</td>
</tr>
<tr>
<td>CTRL+E</td>
<td>最近更改的代码</td>
</tr>
<tr>
<td>fori</td>
<td>生成for (int i &#x3D; 0; i &lt; ; i++) {}</td>
</tr>
<tr>
<td>Alt + &lt;–左右–&gt;键</td>
<td>实现窗口左右更换（多窗口）</td>
</tr>
<tr>
<td>Ctrl + 鼠标点击</td>
<td>快速找到成员变量的出处</td>
</tr>
<tr>
<td>Shift+F6</td>
<td>重构&#x2F;重命名 (包、类、方法、变量、甚至注释等)</td>
</tr>
<tr>
<td>CTRL+Q</td>
<td>查看当前方法的声明</td>
</tr>
<tr>
<td>Ctrl+Alt+V</td>
<td>自动创建变量（new 对象();之后选择按快捷键）</td>
</tr>
<tr>
<td>Ctrl+O</td>
<td>重写方法</td>
</tr>
<tr>
<td>Ctrl+I</td>
<td>实现方法</td>
</tr>
<tr>
<td>ALT+&#x2F;</td>
<td>代码提示</td>
</tr>
<tr>
<td>Ctrl+Shift+R</td>
<td>在当前项目中替换指定内容</td>
</tr>
<tr>
<td>Ctrl+E</td>
<td>最近编辑的文件列表</td>
</tr>
<tr>
<td>Ctrl+P</td>
<td>显示方法参数信息</td>
</tr>
<tr>
<td>Ctrl+Shift+Insert</td>
<td>查看历史复制记录，idea可以保留历史复制的 100 条记录</td>
</tr>
</tbody></table>
<p>控制台语句 System.out 相关：</p>
<table>
<thead>
<tr>
<th>生成控制台的相关快捷键</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>sout + Tab键</td>
<td>生成System.out.println();，输出到控制台语句并换行。</td>
</tr>
<tr>
<td>souf + Tab键</td>
<td>生成System.out.printf(“”);,输出一个格式化字符串到控制台。</td>
</tr>
<tr>
<td>soutm + Tab键</td>
<td>生成System.out.println(“类名.方法名”);，输出当前 类和方法名 到控制台。</td>
</tr>
<tr>
<td>soutp + Tab键</td>
<td>生成System.out.println(所有方法参数名+值);，输出当前 方法的参数名和值 到控制台。</td>
</tr>
</tbody></table>
<h3 id="————————————–日常使用-必备快捷键—————————————"><a href="#————————————–日常使用-必备快捷键—————————————" class="headerlink" title="————————————–日常使用 必备快捷键—————————————"></a>————————————–日常使用 必备快捷键—————————————</h3><h3 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h3><table>
<thead>
<tr>
<th>快捷键</th>
<th>介绍</th>
</tr>
</thead>
<tbody><tr>
<td>Ctrl + F</td>
<td>在当前文件进行文本查找</td>
</tr>
<tr>
<td>Ctrl + R</td>
<td>在当前文件进行文本替换</td>
</tr>
<tr>
<td>Shift + Ctrl + F</td>
<td>在项目进行文本查找</td>
</tr>
<tr>
<td>Shift + Ctrl + R</td>
<td>在项目进行文本替换</td>
</tr>
<tr>
<td>Shift + Shift</td>
<td>快速搜索</td>
</tr>
<tr>
<td>Ctrl + N</td>
<td>查找class</td>
</tr>
<tr>
<td>Ctrl + Shift + N</td>
<td>查找文件</td>
</tr>
<tr>
<td>Ctrl + Shift + Alt + N</td>
<td>查找symbol（查找某个方法名）</td>
</tr>
</tbody></table>
<h3 id="跳转切换"><a href="#跳转切换" class="headerlink" title="跳转切换"></a>跳转切换</h3><table>
<thead>
<tr>
<th>快捷键</th>
<th>介绍</th>
</tr>
</thead>
<tbody><tr>
<td>Ctrl + E</td>
<td>最近文件</td>
</tr>
<tr>
<td>Ctrl + Tab</td>
<td>切换文件</td>
</tr>
<tr>
<td>Ctrl + Alt + ←&#x2F;→</td>
<td>跳转历史光标所在处</td>
</tr>
<tr>
<td>Alt + ←&#x2F;→ 方向键</td>
<td>切换子tab</td>
</tr>
<tr>
<td>Ctrl + G</td>
<td>go to（跳转指定行号）</td>
</tr>
</tbody></table>
<h3 id="编码相关"><a href="#编码相关" class="headerlink" title="编码相关"></a>编码相关</h3><table>
<thead>
<tr>
<th>快捷键</th>
<th>介绍</th>
</tr>
</thead>
<tbody><tr>
<td>Ctrl + W</td>
<td>快速选中</td>
</tr>
<tr>
<td>(Shift + Ctrl) + Alt + J</td>
<td>快速选中同文本</td>
</tr>
<tr>
<td>Ctrl + C&#x2F;Ctrl + X&#x2F;Ctrl + D</td>
<td>快速复制或剪切</td>
</tr>
<tr>
<td>多行选中 Tab &#x2F; Shift + Tab</td>
<td>tab</td>
</tr>
<tr>
<td>Ctrl + Y</td>
<td>删除整行</td>
</tr>
<tr>
<td>滚轮点击变量&#x2F;方法&#x2F;类</td>
<td>快速进入变量&#x2F;方法&#x2F;类的定义处</td>
</tr>
<tr>
<td>Shift + 点击Tab</td>
<td>快速关闭tab</td>
</tr>
<tr>
<td>Ctrl + Z 、Ctrl + Shift + Z</td>
<td>后悔药，撤销&#x2F;取消撤销</td>
</tr>
<tr>
<td>Ctrl + Shift + enter</td>
<td>自动收尾，代码自动补全</td>
</tr>
<tr>
<td>Alt + enter</td>
<td>IntelliJ IDEA 根据光标所在问题，提供快速修复选择，光标放在的位置不同提示的结果也不同</td>
</tr>
<tr>
<td>Alt + ↑&#x2F;↓</td>
<td>方法快速跳转</td>
</tr>
<tr>
<td>F2</td>
<td>跳转到下一个高亮错误 或 警告位置</td>
</tr>
<tr>
<td>Alt + Insert</td>
<td>代码自动生成，如生成对象的 set &#x2F; get 方法，构造函数，toString() 等</td>
</tr>
<tr>
<td>Ctrl + Shift + L</td>
<td>格式化代码</td>
</tr>
<tr>
<td>Shift + F6</td>
<td>快速修改方法名、变量名、文件名、类名等</td>
</tr>
<tr>
<td>Ctrl + F6</td>
<td>快速修改方法签名</td>
</tr>
</tbody></table>
<h3 id="代码阅读相关"><a href="#代码阅读相关" class="headerlink" title="代码阅读相关"></a>代码阅读相关</h3><table>
<thead>
<tr>
<th>快捷键</th>
<th>介绍</th>
</tr>
</thead>
<tbody><tr>
<td>Ctrl + P</td>
<td>方法参数提示显示</td>
</tr>
<tr>
<td>Ctrl + Shift + i</td>
<td>就可以在当前类里再弹出一个窗口出来</td>
</tr>
<tr>
<td>Alt + F7</td>
<td>可以列出变量在哪些地方被使用了</td>
</tr>
<tr>
<td>光标在子类接口名，Ctrl + u</td>
<td>跳到父类接口</td>
</tr>
<tr>
<td>Alt + F1 + 1， esc</td>
<td></td>
</tr>
<tr>
<td>(Shift) + Ctrl + +&#x2F;-</td>
<td>代码块折叠</td>
</tr>
<tr>
<td>Ctrl + Shift + ←&#x2F;→</td>
<td>移动窗口分割线</td>
</tr>
<tr>
<td>Ctrl + (Alt) + B</td>
<td>跳转方法定义&#x2F;实现</td>
</tr>
<tr>
<td>Ctrl + H</td>
<td>类的层级关系</td>
</tr>
<tr>
<td>Ctrl + F12</td>
<td>Show Members 类成员快速显示</td>
</tr>
</tbody></table>
<h3 id="版本管理相关"><a href="#版本管理相关" class="headerlink" title="版本管理相关"></a>版本管理相关</h3><table>
<thead>
<tr>
<th>快捷键</th>
<th>介绍</th>
</tr>
</thead>
<tbody><tr>
<td>Ctrl + D</td>
<td>Show Diff</td>
</tr>
<tr>
<td>(Shift) + F7</td>
<td>（上）下一处修改</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>idea</tag>
      </tags>
  </entry>
  <entry>
    <title>jdk</title>
    <url>/2023/08/11/jdk/</url>
    <content><![CDATA[<p>JDK常用的方法包括：java.lang.Object类的equals（）、hashCode（）和toString（）方法;<br>java.lang.Class类的forName（）方法;java.lang.reflect包中的Field、Method和Constructor类;<br>java.lang.String类的split（）方法;<br>java.util.Arrays类的sort（）方法;<br>java.util.Collections类的sort（）方法;<br>java.util.Date类的getTime（）方法;<br>java.util.Calendar类的getTime（）方法;<br>java.text.SimpleDateFormat类的format（）方法;<br>java.io.File类的listFiles（）方法;<br>java.net.URL类的openStream（）方法;<br>java.sql.Connectionclass的createStatement（）方法;<br>java.sql.ResultSet类的next（）方法;<br>java.awt.Graphics类的drawString（）方法;<br>java.awt.event.ActionListener类的actionPerformed（）方法;<br>java.applet.Applet类的init（）方法;<br>java.applet.AppletContext类的getApplet（）方法;<br>java.applet.AudioClip类的play（）方法;<br>java.awt.Image类的getWidth（）方法;<br>java.awt.image.BufferedImage类的getRGB（）方法;<br>java.awt.Robot类的createScreenCapture（）方法;<br>java.awt.Toolkit类的getImage（）方法;<br>java.awt.datatransfer.Clipboard类的getContent（）方法;<br>java.awt.datatransfer.DataFlavor类的getMimeType（）方法;<br>java.awt.dnd.DragGestureRecognizer类的startDrag（）方法;<br>java.awt.dnd.DragSource类的createDefaultDragGestureRecognizer（）方法;<br>java.awt.dnd.DropTarget类的drop（）方法;<br>java.awt.event.InputEvent类的getModifiers（）方法;<br>java.awt.event.KeyEvent类的getKeyCode（）方法;<br>java.awt.event.MouseEvent类的getX（）方法;<br>java.awt.event.WindowEvent类的getWindow（）方法;<br>java.awt.font.TextAttribute类的FAMILY属性;<br>java.awt.geom.AffineTransform类的getScaleInstance（）方法;<br>java.awt.image.BufferedImage类的getSubimage（）方法;<br>java.awt.image.ImageObserver类的imageUpdate（）方法;<br>java.awt.image.RenderedImage类的getWidth（）方法;<br>java.beans.BeanInfo类的getBeanDescriptor（）方法;<br>java.beans.PropertyDescriptor类的getReadMethod（）方法;<br>java.io.FileInputStream类的read（）方法;<br>java.io.FileOutputStream类的write（）方法;<br>java.io.ObjectInputStream类的readObject（）方法;<br>java.io.ObjectOutputStream类的writeObject（）方法;<br>java.lang.ClassLoader类的loadClass（）方法;<br>java.lang.System类的getProperty（）方法;<br>java.lang.Thread类的start（）方法;<br>java.lang.reflect.Method类的invoke（）方法;java.net.URLConnection类的getInputStream（）方法;<br>java.sql.Statement类的executeQuery（）方法;<br>java.util.ArrayList类的add（）方法;<br>java.util.HashMap类的put（）方法;<br>java.util.Iterator类的hasNext（）方法;<br>java.util.Properties类的getProperty（）方法;<br>java.util.Random类的nextInt（）方法;<br>java.util.ResourceBundle类的getBundle（）方法;<br>java.util.Vector类的addElement（）方法;<br>java.util.zip.ZipFile类的getInputStream（）方法。</p>
]]></content>
      <tags>
        <tag>jdk</tag>
      </tags>
  </entry>
  <entry>
    <title>linux</title>
    <url>/2023/08/08/linux/</url>
    <content><![CDATA[<p>linux固定ip<br> 16 IPADDR&#x3D;”192.168.12.12”<br> 17 NETMASK&#x3D;”255.255.255.0”<br> 18 GATEWAY&#x3D;”192.168.12.2”<br> 19 DNS1&#x3D;”192.168.12.2”<br> BOOTPROTO&#x3D;”static”<br>service network restart</p>
<p><img src="/img/002.png" alt="002"></p>
<p><img src="/img/003.png" alt="003"></p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>maven</title>
    <url>/2023/08/11/maven/</url>
    <content><![CDATA[<p>免费视频及资料下载地址：<a href="https://pan.baidu.com/s/18aRjUllxNJLnDdbOl3c1tg?pwd=yyds">https://pan.baidu.com/s/18aRjUllxNJLnDdbOl3c1tg?pwd=yyds</a> 提取码：yyds<br>.\startup.cmd -m standalone<br>useSSL&#x3D;false&amp;useUnicode&#x3D;true&amp;characterEncoding&#x3D;UTF-8&amp;useServerPrepStmts&#x3D;true&amp;allowPublicKeyRetrieval&#x3D;true</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">activemq.version</span>&gt;</span>5.15.10<span class="tag">&lt;/<span class="name">activemq.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">antlr2.version</span>&gt;</span>2.7.7<span class="tag">&lt;/<span class="name">antlr2.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appengine-sdk.version</span>&gt;</span>1.9.76<span class="tag">&lt;/<span class="name">appengine-sdk.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artemis.version</span>&gt;</span>2.6.4<span class="tag">&lt;/<span class="name">artemis.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aspectj.version</span>&gt;</span>1.9.4<span class="tag">&lt;/<span class="name">aspectj.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">assertj.version</span>&gt;</span>3.11.1<span class="tag">&lt;/<span class="name">assertj.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">atomikos.version</span>&gt;</span>4.0.6<span class="tag">&lt;/<span class="name">atomikos.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bitronix.version</span>&gt;</span>2.1.4<span class="tag">&lt;/<span class="name">bitronix.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build-helper-maven-plugin.version</span>&gt;</span>3.0.0<span class="tag">&lt;/<span class="name">build-helper-maven-plugin.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">byte-buddy.version</span>&gt;</span>1.9.16<span class="tag">&lt;/<span class="name">byte-buddy.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">caffeine.version</span>&gt;</span>2.6.2<span class="tag">&lt;/<span class="name">caffeine.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cassandra-driver.version</span>&gt;</span>3.6.0<span class="tag">&lt;/<span class="name">cassandra-driver.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">classmate.version</span>&gt;</span>1.4.0<span class="tag">&lt;/<span class="name">classmate.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">commons-codec.version</span>&gt;</span>1.11<span class="tag">&lt;/<span class="name">commons-codec.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">commons-dbcp2.version</span>&gt;</span>2.5.0<span class="tag">&lt;/<span class="name">commons-dbcp2.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">commons-lang3.version</span>&gt;</span>3.8.1<span class="tag">&lt;/<span class="name">commons-lang3.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">commons-pool.version</span>&gt;</span>1.6<span class="tag">&lt;/<span class="name">commons-pool.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">commons-pool2.version</span>&gt;</span>2.6.2<span class="tag">&lt;/<span class="name">commons-pool2.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">couchbase-cache-client.version</span>&gt;</span>2.1.0<span class="tag">&lt;/<span class="name">couchbase-cache-client.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">couchbase-client.version</span>&gt;</span>2.7.9<span class="tag">&lt;/<span class="name">couchbase-client.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency-management-plugin.version</span>&gt;</span>1.0.8.RELEASE<span class="tag">&lt;/<span class="name">dependency-management-plugin.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">derby.version</span>&gt;</span>10.14.2.0<span class="tag">&lt;/<span class="name">derby.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dom4j.version</span>&gt;</span>1.6.1<span class="tag">&lt;/<span class="name">dom4j.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dropwizard-metrics.version</span>&gt;</span>4.0.6<span class="tag">&lt;/<span class="name">dropwizard-metrics.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ehcache.version</span>&gt;</span>2.10.6<span class="tag">&lt;/<span class="name">ehcache.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ehcache3.version</span>&gt;</span>3.6.3<span class="tag">&lt;/<span class="name">ehcache3.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">elasticsearch.version</span>&gt;</span>6.4.3<span class="tag">&lt;/<span class="name">elasticsearch.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">embedded-mongo.version</span>&gt;</span>2.1.2<span class="tag">&lt;/<span class="name">embedded-mongo.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exec-maven-plugin.version</span>&gt;</span>1.6.0<span class="tag">&lt;/<span class="name">exec-maven-plugin.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">flatten-maven-plugin.version</span>&gt;</span>1.0.1<span class="tag">&lt;/<span class="name">flatten-maven-plugin.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">flyway.version</span>&gt;</span>5.2.4<span class="tag">&lt;/<span class="name">flyway.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">freemarker.version</span>&gt;</span>2.3.29<span class="tag">&lt;/<span class="name">freemarker.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">git-commit-id-plugin.version</span>&gt;</span>2.2.6<span class="tag">&lt;/<span class="name">git-commit-id-plugin.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">glassfish-el.version</span>&gt;</span>3.0.0<span class="tag">&lt;/<span class="name">glassfish-el.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">glassfish-jaxb.version</span>&gt;</span>2.3.1<span class="tag">&lt;/<span class="name">glassfish-jaxb.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groovy.version</span>&gt;</span>2.5.8<span class="tag">&lt;/<span class="name">groovy.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">gson.version</span>&gt;</span>2.8.5<span class="tag">&lt;/<span class="name">gson.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2.version</span>&gt;</span>1.4.199<span class="tag">&lt;/<span class="name">h2.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hamcrest.version</span>&gt;</span>1.3<span class="tag">&lt;/<span class="name">hamcrest.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hazelcast.version</span>&gt;</span>3.11.4<span class="tag">&lt;/<span class="name">hazelcast.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hazelcast-hibernate5.version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">hazelcast-hibernate5.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hibernate.version</span>&gt;</span>5.3.11.Final<span class="tag">&lt;/<span class="name">hibernate.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hibernate-validator.version</span>&gt;</span>6.0.17.Final<span class="tag">&lt;/<span class="name">hibernate-validator.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hikaricp.version</span>&gt;</span>3.2.0<span class="tag">&lt;/<span class="name">hikaricp.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hsqldb.version</span>&gt;</span>2.4.1<span class="tag">&lt;/<span class="name">hsqldb.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">htmlunit.version</span>&gt;</span>2.33<span class="tag">&lt;/<span class="name">htmlunit.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">httpasyncclient.version</span>&gt;</span>4.1.4<span class="tag">&lt;/<span class="name">httpasyncclient.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">httpclient.version</span>&gt;</span>4.5.9<span class="tag">&lt;/<span class="name">httpclient.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">httpcore.version</span>&gt;</span>4.4.12<span class="tag">&lt;/<span class="name">httpcore.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">infinispan.version</span>&gt;</span>9.4.16.Final<span class="tag">&lt;/<span class="name">infinispan.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">influxdb-java.version</span>&gt;</span>2.14<span class="tag">&lt;/<span class="name">influxdb-java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jackson.version</span>&gt;</span>2.9.9.20190807<span class="tag">&lt;/<span class="name">jackson.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jackson-bom.version</span>&gt;</span>$&#123;jackson.version&#125;<span class="tag">&lt;/<span class="name">jackson-bom.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">janino.version</span>&gt;</span>3.0.15<span class="tag">&lt;/<span class="name">janino.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">javax-activation.version</span>&gt;</span>1.2.0<span class="tag">&lt;/<span class="name">javax-activation.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">javax-annotation.version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">javax-annotation.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">javax-cache.version</span>&gt;</span>1.1.1<span class="tag">&lt;/<span class="name">javax-cache.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">javax-jaxb.version</span>&gt;</span>2.3.1<span class="tag">&lt;/<span class="name">javax-jaxb.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">javax-jaxws.version</span>&gt;</span>2.3.1<span class="tag">&lt;/<span class="name">javax-jaxws.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">javax-jms.version</span>&gt;</span>2.0.1<span class="tag">&lt;/<span class="name">javax-jms.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">javax-json.version</span>&gt;</span>1.1.4<span class="tag">&lt;/<span class="name">javax-json.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">javax-jsonb.version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">javax-jsonb.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">javax-mail.version</span>&gt;</span>1.6.2<span class="tag">&lt;/<span class="name">javax-mail.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">javax-money.version</span>&gt;</span>1.0.3<span class="tag">&lt;/<span class="name">javax-money.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">javax-persistence.version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">javax-persistence.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">javax-transaction.version</span>&gt;</span>1.3<span class="tag">&lt;/<span class="name">javax-transaction.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">javax-validation.version</span>&gt;</span>2.0.1.Final<span class="tag">&lt;/<span class="name">javax-validation.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">javax-websocket.version</span>&gt;</span>1.1<span class="tag">&lt;/<span class="name">javax-websocket.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jaxen.version</span>&gt;</span>1.1.6<span class="tag">&lt;/<span class="name">jaxen.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jaybird.version</span>&gt;</span>3.0.6<span class="tag">&lt;/<span class="name">jaybird.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jboss-logging.version</span>&gt;</span>3.3.3.Final<span class="tag">&lt;/<span class="name">jboss-logging.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jboss-transaction-spi.version</span>&gt;</span>7.6.0.Final<span class="tag">&lt;/<span class="name">jboss-transaction-spi.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jdom2.version</span>&gt;</span>2.0.6<span class="tag">&lt;/<span class="name">jdom2.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jedis.version</span>&gt;</span>2.9.3<span class="tag">&lt;/<span class="name">jedis.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jersey.version</span>&gt;</span>2.27<span class="tag">&lt;/<span class="name">jersey.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jest.version</span>&gt;</span>6.3.1<span class="tag">&lt;/<span class="name">jest.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jetty.version</span>&gt;</span>9.4.19.v20190610<span class="tag">&lt;/<span class="name">jetty.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jetty-el.version</span>&gt;</span>8.5.40<span class="tag">&lt;/<span class="name">jetty-el.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jetty-jsp.version</span>&gt;</span>2.2.0.v201112011158<span class="tag">&lt;/<span class="name">jetty-jsp.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jetty-reactive-httpclient.version</span>&gt;</span>1.0.3<span class="tag">&lt;/<span class="name">jetty-reactive-httpclient.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jmustache.version</span>&gt;</span>1.14<span class="tag">&lt;/<span class="name">jmustache.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jna.version</span>&gt;</span>4.5.2<span class="tag">&lt;/<span class="name">jna.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">joda-time.version</span>&gt;</span>2.10.3<span class="tag">&lt;/<span class="name">joda-time.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">johnzon.version</span>&gt;</span>$&#123;johnzon-jsonb.version&#125;<span class="tag">&lt;/<span class="name">johnzon.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">johnzon-jsonb.version</span>&gt;</span>1.1.13<span class="tag">&lt;/<span class="name">johnzon-jsonb.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jolokia.version</span>&gt;</span>1.6.2<span class="tag">&lt;/<span class="name">jolokia.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jooq.version</span>&gt;</span>3.11.12<span class="tag">&lt;/<span class="name">jooq.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jsonassert.version</span>&gt;</span>1.5.0<span class="tag">&lt;/<span class="name">jsonassert.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">json-path.version</span>&gt;</span>2.4.0<span class="tag">&lt;/<span class="name">json-path.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jstl.version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">jstl.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jtds.version</span>&gt;</span>1.3.1<span class="tag">&lt;/<span class="name">jtds.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">junit.version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">junit.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">junit-jupiter.version</span>&gt;</span>5.3.2<span class="tag">&lt;/<span class="name">junit-jupiter.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">kafka.version</span>&gt;</span>2.0.1<span class="tag">&lt;/<span class="name">kafka.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">kotlin.version</span>&gt;</span>1.2.71<span class="tag">&lt;/<span class="name">kotlin.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">lettuce.version</span>&gt;</span>5.1.8.RELEASE<span class="tag">&lt;/<span class="name">lettuce.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">liquibase.version</span>&gt;</span>3.6.3<span class="tag">&lt;/<span class="name">liquibase.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">log4j2.version</span>&gt;</span>2.11.2<span class="tag">&lt;/<span class="name">log4j2.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logback.version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">logback.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">lombok.version</span>&gt;</span>1.18.8<span class="tag">&lt;/<span class="name">lombok.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mariadb.version</span>&gt;</span>2.3.0<span class="tag">&lt;/<span class="name">mariadb.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven-antrun-plugin.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven-antrun-plugin.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven-assembly-plugin.version</span>&gt;</span>3.1.1<span class="tag">&lt;/<span class="name">maven-assembly-plugin.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven-clean-plugin.version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">maven-clean-plugin.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven-compiler-plugin.version</span>&gt;</span>3.8.1<span class="tag">&lt;/<span class="name">maven-compiler-plugin.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven-dependency-plugin.version</span>&gt;</span>3.1.1<span class="tag">&lt;/<span class="name">maven-dependency-plugin.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven-deploy-plugin.version</span>&gt;</span>2.8.2<span class="tag">&lt;/<span class="name">maven-deploy-plugin.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven-enforcer-plugin.version</span>&gt;</span>3.0.0-M2<span class="tag">&lt;/<span class="name">maven-enforcer-plugin.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven-failsafe-plugin.version</span>&gt;</span>2.22.2<span class="tag">&lt;/<span class="name">maven-failsafe-plugin.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven-help-plugin.version</span>&gt;</span>3.1.1<span class="tag">&lt;/<span class="name">maven-help-plugin.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven-install-plugin.version</span>&gt;</span>2.5.2<span class="tag">&lt;/<span class="name">maven-install-plugin.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven-invoker-plugin.version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">maven-invoker-plugin.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven-jar-plugin.version</span>&gt;</span>3.1.2<span class="tag">&lt;/<span class="name">maven-jar-plugin.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven-javadoc-plugin.version</span>&gt;</span>3.0.1<span class="tag">&lt;/<span class="name">maven-javadoc-plugin.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven-resources-plugin.version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">maven-resources-plugin.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven-shade-plugin.version</span>&gt;</span>3.2.1<span class="tag">&lt;/<span class="name">maven-shade-plugin.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven-site-plugin.version</span>&gt;</span>3.7.1<span class="tag">&lt;/<span class="name">maven-site-plugin.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven-source-plugin.version</span>&gt;</span>3.0.1<span class="tag">&lt;/<span class="name">maven-source-plugin.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven-surefire-plugin.version</span>&gt;</span>2.22.2<span class="tag">&lt;/<span class="name">maven-surefire-plugin.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven-war-plugin.version</span>&gt;</span>3.2.3<span class="tag">&lt;/<span class="name">maven-war-plugin.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">micrometer.version</span>&gt;</span>1.1.6<span class="tag">&lt;/<span class="name">micrometer.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mimepull.version</span>&gt;</span>1.9.11<span class="tag">&lt;/<span class="name">mimepull.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mockito.version</span>&gt;</span>2.23.4<span class="tag">&lt;/<span class="name">mockito.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mongodb.version</span>&gt;</span>3.8.2<span class="tag">&lt;/<span class="name">mongodb.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mongo-driver-reactivestreams.version</span>&gt;</span>1.9.2<span class="tag">&lt;/<span class="name">mongo-driver-reactivestreams.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mssql-jdbc.version</span>&gt;</span>6.4.0.jre8<span class="tag">&lt;/<span class="name">mssql-jdbc.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mysql.version</span>&gt;</span>8.0.17<span class="tag">&lt;/<span class="name">mysql.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">nekohtml.version</span>&gt;</span>1.9.22<span class="tag">&lt;/<span class="name">nekohtml.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">neo4j-ogm.version</span>&gt;</span>3.1.13<span class="tag">&lt;/<span class="name">neo4j-ogm.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">netty.version</span>&gt;</span>4.1.39.Final<span class="tag">&lt;/<span class="name">netty.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">netty-tcnative.version</span>&gt;</span>2.0.25.Final<span class="tag">&lt;/<span class="name">netty-tcnative.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">nio-multipart-parser.version</span>&gt;</span>1.1.0<span class="tag">&lt;/<span class="name">nio-multipart-parser.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pooled-jms.version</span>&gt;</span>1.0.6<span class="tag">&lt;/<span class="name">pooled-jms.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">postgresql.version</span>&gt;</span>42.2.6<span class="tag">&lt;/<span class="name">postgresql.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">prometheus-pushgateway.version</span>&gt;</span>0.5.0<span class="tag">&lt;/<span class="name">prometheus-pushgateway.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">quartz.version</span>&gt;</span>2.3.1<span class="tag">&lt;/<span class="name">quartz.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">querydsl.version</span>&gt;</span>4.2.1<span class="tag">&lt;/<span class="name">querydsl.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">rabbit-amqp-client.version</span>&gt;</span>5.4.3<span class="tag">&lt;/<span class="name">rabbit-amqp-client.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">reactive-streams.version</span>&gt;</span>1.0.3<span class="tag">&lt;/<span class="name">reactive-streams.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">reactor-bom.version</span>&gt;</span>Californium-SR11<span class="tag">&lt;/<span class="name">reactor-bom.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">rest-assured.version</span>&gt;</span>3.1.1<span class="tag">&lt;/<span class="name">rest-assured.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">rxjava.version</span>&gt;</span>1.3.8<span class="tag">&lt;/<span class="name">rxjava.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">rxjava2.version</span>&gt;</span>2.2.12<span class="tag">&lt;/<span class="name">rxjava2.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">rxjava-adapter.version</span>&gt;</span>1.2.1<span class="tag">&lt;/<span class="name">rxjava-adapter.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">saaj-impl.version</span>&gt;</span>1.5.0<span class="tag">&lt;/<span class="name">saaj-impl.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">selenium.version</span>&gt;</span>3.14.0<span class="tag">&lt;/<span class="name">selenium.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">selenium-htmlunit.version</span>&gt;</span>2.33.0<span class="tag">&lt;/<span class="name">selenium-htmlunit.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">sendgrid.version</span>&gt;</span>4.3.0<span class="tag">&lt;/<span class="name">sendgrid.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-api.version</span>&gt;</span>4.0.1<span class="tag">&lt;/<span class="name">servlet-api.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slf4j.version</span>&gt;</span>1.7.28<span class="tag">&lt;/<span class="name">slf4j.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">snakeyaml.version</span>&gt;</span>1.23<span class="tag">&lt;/<span class="name">snakeyaml.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">solr.version</span>&gt;</span>7.7.2<span class="tag">&lt;/<span class="name">solr.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>5.1.9.RELEASE<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">spring-amqp.version</span>&gt;</span>2.1.8.RELEASE<span class="tag">&lt;/<span class="name">spring-amqp.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">spring-batch.version</span>&gt;</span>4.1.2.RELEASE<span class="tag">&lt;/<span class="name">spring-batch.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">spring-cloud-connectors.version</span>&gt;</span>2.0.6.RELEASE<span class="tag">&lt;/<span class="name">spring-cloud-connectors.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">spring-data-releasetrain.version</span>&gt;</span>Lovelace-SR10<span class="tag">&lt;/<span class="name">spring-data-releasetrain.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">spring-framework.version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">spring-framework.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">spring-hateoas.version</span>&gt;</span>0.25.2.RELEASE<span class="tag">&lt;/<span class="name">spring-hateoas.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">spring-integration.version</span>&gt;</span>5.1.7.RELEASE<span class="tag">&lt;/<span class="name">spring-integration.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">spring-kafka.version</span>&gt;</span>2.2.8.RELEASE<span class="tag">&lt;/<span class="name">spring-kafka.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">spring-ldap.version</span>&gt;</span>2.3.2.RELEASE<span class="tag">&lt;/<span class="name">spring-ldap.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">spring-plugin.version</span>&gt;</span>1.2.0.RELEASE<span class="tag">&lt;/<span class="name">spring-plugin.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">spring-restdocs.version</span>&gt;</span>2.0.3.RELEASE<span class="tag">&lt;/<span class="name">spring-restdocs.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">spring-retry.version</span>&gt;</span>1.2.4.RELEASE<span class="tag">&lt;/<span class="name">spring-retry.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">spring-security.version</span>&gt;</span>5.1.6.RELEASE<span class="tag">&lt;/<span class="name">spring-security.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">spring-session-bom.version</span>&gt;</span>Bean-SR7<span class="tag">&lt;/<span class="name">spring-session-bom.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">spring-ws.version</span>&gt;</span>3.0.7.RELEASE<span class="tag">&lt;/<span class="name">spring-ws.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">sqlite-jdbc.version</span>&gt;</span>3.25.2<span class="tag">&lt;/<span class="name">sqlite-jdbc.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">statsd-client.version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">statsd-client.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">sun-mail.version</span>&gt;</span>$&#123;javax-mail.version&#125;<span class="tag">&lt;/<span class="name">sun-mail.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thymeleaf.version</span>&gt;</span>3.0.11.RELEASE<span class="tag">&lt;/<span class="name">thymeleaf.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thymeleaf-extras-data-attribute.version</span>&gt;</span>2.0.1<span class="tag">&lt;/<span class="name">thymeleaf-extras-data-attribute.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thymeleaf-extras-java8time.version</span>&gt;</span>3.0.4.RELEASE<span class="tag">&lt;/<span class="name">thymeleaf-extras-java8time.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thymeleaf-extras-springsecurity.version</span>&gt;</span>3.0.4.RELEASE<span class="tag">&lt;/<span class="name">thymeleaf-extras-springsecurity.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thymeleaf-layout-dialect.version</span>&gt;</span>2.3.0<span class="tag">&lt;/<span class="name">thymeleaf-layout-dialect.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tomcat.version</span>&gt;</span>9.0.24<span class="tag">&lt;/<span class="name">tomcat.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">unboundid-ldapsdk.version</span>&gt;</span>4.0.11<span class="tag">&lt;/<span class="name">unboundid-ldapsdk.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">undertow.version</span>&gt;</span>2.0.26.Final<span class="tag">&lt;/<span class="name">undertow.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">versions-maven-plugin.version</span>&gt;</span>2.7<span class="tag">&lt;/<span class="name">versions-maven-plugin.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">webjars-hal-browser.version</span>&gt;</span>3325375<span class="tag">&lt;/<span class="name">webjars-hal-browser.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">webjars-locator-core.version</span>&gt;</span>0.35<span class="tag">&lt;/<span class="name">webjars-locator-core.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">woodstox.version</span>&gt;</span>5.0.3<span class="tag">&lt;/<span class="name">woodstox.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">wsdl4j.version</span>&gt;</span>1.6.3<span class="tag">&lt;/<span class="name">wsdl4j.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xml-apis.version</span>&gt;</span>1.4.01<span class="tag">&lt;/<span class="name">xml-apis.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xml-maven-plugin.version</span>&gt;</span>1.0.2<span class="tag">&lt;/<span class="name">xml-maven-plugin.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xmlunit2.version</span>&gt;</span>2.6.3<span class="tag">&lt;/<span class="name">xmlunit2.version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>二次元中有很多具有代表性的病娇角色，比如《未来日记》中的我爱罗、《恶魔高校D×D》中的雷雅、《学园默示录》中の佐仓小姐等等3<br>document.querySelector(‘video’).playbackRate &#x3D; 3;<br>playbackRate</p>
]]></content>
      <tags>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql</title>
    <url>/2023/08/05/mysql/</url>
    <content><![CDATA[<p>mysql</p>
<p>ddl:  操作数据库</p>
<p>查询：&nbsp;&nbsp;show databases;(所有)&nbsp;&nbsp;&nbsp;select database();(当前)</p>
<p>创建：&nbsp;&nbsp;create database&nbsp;&nbsp;&nbsp;ittest;&nbsp;&nbsp;&nbsp;(if not exists)</p>
<p>删除：&nbsp;&nbsp;drop database ittest;&nbsp;&nbsp;&nbsp;(if  exists)</p>
<p>使用：&nbsp;&nbsp;use ittest;</p>
<p>ddl:&nbsp;&nbsp;操作表结构</p>
<p>查询：&nbsp;&nbsp;show tables;(所有表)&nbsp;&nbsp;&nbsp;desc 表名;(表结构)&nbsp;&nbsp;&nbsp;show create table 表名;(建表语句) </p>
<p>创建：&nbsp;&nbsp;create table 表名(字段1  字段1类型 comment 注释,字段2  字段2类型 comment 注释)</p>
<p>数据类型：&nbsp;&nbsp;数据类型、字符串类型、日期时间类型。</p>
<p>修改：&nbsp;&nbsp;alter table  表名 add 字段名 类型(长度);(添加)&nbsp;&nbsp;&nbsp;alter table  表名 change 旧字段名  新字段名  类型(长度);(修改)&nbsp;&nbsp;&nbsp;alter  table 表名 drop 字段名;(删除)&nbsp;&nbsp;&nbsp;alter  table 表名 rename to  新表名;(表名)</p>
<p>删除：&nbsp;&nbsp;drop table  表名;&nbsp;&nbsp;&nbsp;truncate   table  表名;</p>
<p>dml:&nbsp;&nbsp;增删改</p>
<p>添加：&nbsp;&nbsp;insert  into 表名(字段1,字段2) values (值1,值2);</p>
<p>修改：&nbsp;&nbsp;update  表名  set  字段1&#x3D;值1, 字段2&#x3D;值2;</p>
<p>删除：&nbsp;&nbsp;delete  from 表名;</p>
<p>dql:&nbsp;&nbsp;查询</p>
<p>查询：&nbsp;&nbsp;select  字段列表  from 表名列表  where  条件列表  group by  分组条件列表  having  分组后条件列表  order  by   排序字段列表  limit  分页参数;</p>
<p>聚合函数：&nbsp;&nbsp;count&nbsp;&nbsp;&nbsp;max&nbsp;&nbsp;&nbsp;min&nbsp;&nbsp;&nbsp;avg&nbsp;&nbsp;&nbsp;sum</p>
<p>dcl:&nbsp;&nbsp;用户权限</p>
<p>多表查询：</p>
<p>连接查询：</p>
<p>内连接：</p>
<p>外连接：</p>
<p>自连接：</p>
<p>联合查询：</p>
<p>子查询：</p>
<p>标量子查询：</p>
<p>列子查询：</p>
<p>行子查询：</p>
<p>表子查询：</p>
<p>事务：&nbsp;&nbsp;原子性&nbsp;&nbsp;&nbsp;一致性&nbsp;&nbsp;&nbsp;隔离性&nbsp;&nbsp;&nbsp;持久性</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>redis</title>
    <url>/2023/08/06/redis/</url>
    <content><![CDATA[<p>redis的基本数据类型：<br>string &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hash &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sortedset &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geo &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bitmap &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hyperlog<br>redis常用命令：<br>keys *<br>del name<br>mset k1 v1 k2 v2 k3 v3<br>exists age<br>expire age 20<br>ttl age</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>springboot</title>
    <url>/2023/08/09/springboot/</url>
    <content><![CDATA[<p>save &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;增加 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @PostMapping<br>page &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;分页  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@GetMapping(“&#x2F;page”)<br>update &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;修改	  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@PutMapping<br>getById &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;查询id		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@GetMapping(“&#x2F;{id}”)<br>remove  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;删除	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@DeleteMapping(“&#x2F;{id}”)<br>batchRemove  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;批量删除   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@DeleteMapping<br>findAll &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;查询所有	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@GetMapping</p>
]]></content>
      <tags>
        <tag>springboot</tag>
      </tags>
  </entry>
  <entry>
    <title>video</title>
    <url>/2023/08/07/video/</url>
    <content><![CDATA[<p>这是一个视频</p>
<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe 
src="https://www.bilibili.com/video/BV1rc411c7mi/?spm_id_from=333.999.0.0&vd_source=c6b8b78d53ad1898051d946c0af958c7" scrolling="no" border="0" 
frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; 
height: 100%; left: 0; top: 0;"> </iframe></div>]]></content>
      <tags>
        <tag>video</tag>
      </tags>
  </entry>
  <entry>
    <title>一点图片</title>
    <url>/2023/08/09/%E4%B8%80%E7%82%B9%E5%9B%BE%E7%89%87/</url>
    <content><![CDATA[<p>一点婧婧的图片<br><img src="/img/004.jpg" alt="004"><br><img src="/img/005.jpg" alt="005"><br><img src="/img/006.jpg" alt="006"></p>
]]></content>
      <tags>
        <tag>图片</tag>
      </tags>
  </entry>
  <entry>
    <title>单词</title>
    <url>/2023/08/05/%E5%8D%95%E8%AF%8D/</url>
    <content><![CDATA[<p>String<br>Object<br>equals<br>hashCode<br>true<br>final<br>String<br>StringBuffer<br>StringBuilder<br>reverse<br>indexOf<br>charAt<br>replace<br>trim<br>split<br>getBytes<br>length<br>toLowerCase<br>substring<br>equals<br>abstract<br>extends<br>public<br>input<br>BIO<br>NIO<br>Files<br>exists<br>createFile<br>delete<br>copy<br>move<br>size<br>read<br>write<br>collection<br>list<br>arraylist<br>linkedlist<br>vector<br>stack<br>set<br>hashset<br>linkedhashset<br>treeset<br>hashmap<br>linkedhsahmap<br>treemap<br>concurrenthashmap<br>hashtable<br>collection<br>collections<br>lterator<br>Thread<br>Runnable<br>Callable<br>new<br>runnable<br>blocked<br>waiting<br>timed_waiting<br>terminated</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>单词</tag>
      </tags>
  </entry>
  <entry>
    <title>加密</title>
    <url>/2023/08/08/%E5%8A%A0%E5%AF%86/</url>
    <content><![CDATA[<p>对称加密和非对称加密是两种不同的加密方法，用于保护数据的安全性和隐私。</p>
<p><strong>对称加密：</strong><br>在对称加密中，相同的密钥用于加密和解密数据。发送者和接收者在交换数据之前必须共享相同的密钥。这种方法的主要优点是加密和解密过程相对较快，但缺点是密钥的管理和分发可能会变得复杂，尤其在大规模系统中。</p>
<p>常见的对称加密算法有：AES（Advanced Encryption Standard）、DES（Data Encryption Standard）、3DES（Triple DES）、Blowfish 等。</p>
<p><strong>非对称加密：</strong><br>在非对称加密中，使用一对密钥：公钥和私钥。公钥用于加密数据，而私钥用于解密数据。发送者可以将数据用接收者的公钥加密，只有持有相应私钥的接收者才能解密数据。此外，非对称加密还可以用于数字签名，发送者可以使用自己的私钥来创建数字签名，接收者可以使用发送者的公钥验证签名的真实性。</p>
<p>非对称加密的主要优点是在数据传输过程中不需要共享密钥，因此解决了对称加密中密钥分发的问题。然而，由于加密和解密过程相对较慢，非对称加密通常用于加密少量的敏感数据或用于安全验证。</p>
<p>常见的非对称加密算法有：RSA（Rivest-Shamir-Adleman）、DSA（Digital Signature Algorithm）、ECC（Elliptic Curve Cryptography）等。</p>
<p>综合而言，对称加密适用于大量数据的加密，而非对称加密适用于密钥交换、数字签名和少量数据的安全传输。在实际应用中，通常会将对称和非对称加密结合使用，以平衡性能和安全性的需求。</p>
]]></content>
      <tags>
        <tag>加密</tag>
      </tags>
  </entry>
  <entry>
    <title>名言</title>
    <url>/2023/08/11/%E5%90%8D%E8%A8%80/</url>
    <content><![CDATA[<div class="content"><p><strong>军事名人名言大全：</strong></p><p>　　1、让青年人歌颂爱情，让成年人崇尚军事——拉丁语</p><p>　　2、如同外科医生的手术箱里，有各种不同的工具一样，军事手段也只是达成大战略的手段之一。——利德尔·哈特</p><p>　　3、使敌人丧失平衡，自己乱了阵脚，这才是战略的真正目的；其结果不是敌人自行崩溃，就是在会战中轻易被我击溃。——利德尔·哈特</p><p>　　4、突然性是战略的本质。——利德尔·哈特</p><p>　　5、在战略上，最漫长的迂回道路，常常又是达到目的的最短途径。——利德尔·哈特</p><p>　　6、战术之为物，一言以蔽之是若干世纪以来的军事经验的积累。——戴吉伯</p><p>　　7、这是战争中一条万古不易的公理，确保你自己的侧翼和后方，而设法迂回敌人的侧翼和后方。——腓特烈</p><p>　　8、人民战争必须向云雾一样，在任何地方也不凝结成一个反抗的核心。——克劳塞维茨</p><p>　　9、只有获得胜利的可能性非常大时，才可进行决战。——恩格斯</p><p>　　10、战术就是在决定点上使用兵力的艺术，其目的就是要使他们在决定的时机、决定的地点上，发生决定性的作用。——约米尼</p><p>　　11、任何战术都只适用于一定的历史阶段；如果武器改进了，技术有了新的进步，那么军事组织的形式、军队指挥的方法也会随着改变。——伏龙芝</p><p>　　12、每一种情况都有适合于它的一个特殊的战略。——安德烈·博弗尔</p><p>　　13、战略若太复杂，必然失败。——西乡隆盛</p><p>　　14、只要不失败就是胜利。这正是对抗强大的先进国家军事力量的人民战争战略取得胜利的关键。——小山内宏</p><p>　　15、用兵之法，十则围之，五则攻之，倍则分之，敌则能战之，少则能逃之，不若则能避之。——孙武</p><p>　　16、以近待远，以佚待劳，以饱待饥。——孙武</p><p>　　17、始如处女，敌人开户，后如脱兔，敌不及拒。——孙武</p><p>　　18、出其所必趋，趋其所不意。——孙武</p><p>　　19、战势不过奇正，奇正之变，不可胜穷也。——孙武</p><p>　　20、凡战者，以正合，以奇胜。故善出奇者，无穷如天地，不竭如山河。——孙武</p><p>　　21、水之行，避高而趋下；兵之形，避实而击虚。——孙武</p><p>　　22、用兵必须审敌虚实而趋其危。——吴起</p><p>　　23、正兵贵先，奇兵贵后。或先或后，制敌者也。——魏缭</p><p>　　24、善用兵者，不以短击长，而以长击短。——<a href="//www.diyifanwen.com/tool/zggdmrmy/105223444932028539.htm">司马迁</a></p><p>　　25、与人斗，不扼其亢，拊其背，未能全胜也。——班固</p><p>　　26、兵有奇正，旋相为用，如环之无端。——苏辙</p><p>　　27、用兵以能聚散为上。——杨时</p><p>　　28、凡与敌战，须务持重。见利则动，不见利则止，慎不可轻举也。——刘基</p><p>　　29、合兵以壮威，分兵以制胜。——揭暄</p><p>　　30、有正无奇，虽整不烈，无以致胜也；有奇无正，虽锐无恃，难以控御也。——何良臣</p><p>　　31、善用兵者，攻其爱，敌必从；捣其虚，敌必随；多其方，敌必分；疑其事，敌必备。——马慧裕</p><p>　　32、以全军破敌为上，不以得土地、城池为意。——蔡锷</p><p>　　33、敌进我退，敌驻我扰，敌疲我打，敌退我追。——<a href="//www.diyifanwen.com/tool/zgjdmrmy/105223524190071416.htm">毛泽东</a></p><p>　　34、必须打胜；必须照顾全战役计划；必须照顾下一战略阶段：这是反攻开始，即打第一仗时，不可忘记的三个原则。——毛泽东</p><p>　　35、弱军对于强军作战的再一个必要条件，就是拣弱的打。——毛泽东</p><p>　　36、先打分散和孤立之敌，后打集中和强大之敌。——毛泽东</p><p>　　37、袭击是游击战争的基本作战形式。——毛泽东</p><p>　　38、歼灭战和集中优势兵力、采取包围迂回战术，同一意义。没有后者，就没有前者。——毛泽东</p><p>　　39、对于人，伤其十指不如断其一指；对于敌，击溃其十个师不如歼灭其一个师。——毛泽东</p><p>　　40、只有决战，才能解决两军之间谁胜谁败的问题。——毛泽东</p><p>　　41、牛牴角的战术是非常糟糕的，马的战术比牛的战术高明，狼的战术又比马的战术高明。——刘伯承</p><p>　　42、在战略上是打强的，在战役、战术上是打弱的。——刘伯承</p><p>　　43、良好的军事领导能左右周围事物，——<a href="//www.diyifanwen.com/tool/gwmrmy/105300574099995722.htm">拿破仑</a></p><p>　　44、政治合格，军事过硬，作风优良，纪律严明，保障有力。——江泽民</p><p>　　45、军事谋略的第一个特征，就是要有——安德烈·博弗尔</p><p>　　46、将帅的坚强意志，就像城市主要街道汇集点上的方尖碑一样，在军事艺术中占有十分突出的地位。——克劳塞维茨</p><p>　　47、没有不用军事计谋的战争。——<a href="//www.diyifanwen.com/tool/gwmrmy/105300574039011206.htm">列宁</a></p><p>　　48、战争重要的是求取政治是的成果，而不是军事上的成功。——蒙森</p><p>　　49、所谓军事指挥艺术，就是当自己的兵力数量实际上居于劣势时，反而能在战场上化劣势为优势。——拿破仑</p><p>　　50、我对政治毫无天分，就如同一头奶牛对打猎一窍不通一样，况且我对政治也不感兴趣。另外，我也认为一个人军事上的声望如果和政治混杂在一块的话，将是很糟糕的。——<a href="//www.diyifanwen.com/tool/gwmrmy/105300573733823561.htm">巴顿</a></p><p>　　51、在作战训练中的一个基本部分就是教士兵们如何照顾自己以增强身体适应力。因此，我们必须向他们说明怎样最谨慎地照料好他们的衣服、装备以及军事备品。——巴顿</p><p><strong>编辑推荐：</strong><br><a href="//www.diyifanwen.com/tool/mingyanmingju/144121512482461337544.htm" target="_blank">军事名人名言摘录</a><br><a href="//www.diyifanwen.com/tool/jingdianmingyan/1251421170120193.htm" target="_blank">关于军事的名人名言</a><br></p></div>]]></content>
      <tags>
        <tag>名言</tag>
      </tags>
  </entry>
  <entry>
    <title>图片</title>
    <url>/2023/08/07/%E5%9B%BE%E7%89%87/</url>
    <content><![CDATA[<p>这是一张图片<br><img src="/img/20230801212452.jpg" alt="图片"></p>
]]></content>
      <tags>
        <tag>图片</tag>
      </tags>
  </entry>
  <entry>
    <title>幸无题</title>
    <url>/2023/08/08/%E5%B9%B8%E6%97%A0%E9%A2%98/</url>
    <content><![CDATA[<p>明月不知晚，照几夜无眠。<br>和春风花影，相偕上阑干。<br>是心期到此都成茧。<br>化栩栩蝴蝶翩跹，越瀛洲渡万里蓬山。<br>远不过眉峰黛浅，催成哀艳。<br>抵死相思翻作二三言。</p>
<p>隔钗头燕看镜里双鸾，<br>说心间灵犀相知一点。<br>枕上香痕浑似梦，<br>问春心知否如烟。</p>
<p>折菱枝和露相看灯前，<br>未信此别后真隔河汉。<br>十二巫峰难留恋，<br>空误了锦堂月圆。</p>
<p>归去横塘晓，<br>华星送宝鞍。<br>别时难，<br>蜡炬成灰泪始干。</p>
<p>向灯盏酒盏，问心弦管弦。<br>将泪敛愁敛，托眉尖笔尖。<br>是心期到此都成典。<br>化纸上障目重帘，<br>待后世徒劳作郑笺。<br>解不出心肠百转，强说缠绵。<br>终古征尘未涴白袷衫。</p>
<p>忘几夜星辰共春酒暖。<br>忆几行烛泪照水晶帘。<br>夜阑空余金烬暗，<br>赋到深愁每自缄。<br>访几层瑶台得遇神仙，<br>倾几盏云浆尽忘悲欢。<br>终朝悄立垂杨岸，<br>更倩何人为探看。</p>
<p>春物岂相干，<br>人生只强欢。<br>俱难遣，<br>忍委芳心与暮蝉。</p>
<p>或有所念思而不可见，<br>或有所叹微意终寓怨。<br>解未解间且掩卷，<br>留待某日一开颜。<br>是作风怀未敢信必然，<br>是抒不平未能尽其言。<br>七香车过雷声远，<br>碧桃开谢一千年。</p>
<p>书长为报晚，<br>梦好更寻难。<br>终辗转。<br>只是当时已惘然。</p>
]]></content>
      <tags>
        <tag>幸无题</tag>
      </tags>
  </entry>
  <entry>
    <title>怀古</title>
    <url>/2023/08/05/%E6%80%80%E5%8F%A4/</url>
    <content><![CDATA[<p>举樽空对西江月，清光曾照苑中人。</p>
<p>沉沙铺了几场雪，折戟坍落覆忠魂。</p>
<p>莫叹歌钟高台立，一炬焦土皆做尘。</p>
<p>石崩木朽昔人尽，墟间一花探清晨。</p>
<p>我笔下咏史三两篇，观轮回反反复复。</p>
<p>清风嗔我没个斤两偏钟情于翻乱书牍。</p>
<p>我虚有拙作三两篇，不必去赞叹熟读。</p>
<p>人不过在世数十年，那便难得糊涂。</p>
<p>（人为何要怀古？）是赏花煮酒不美吗？</p>
<p>（为何要怀古？）你快给我住嘴吧？</p>
<p>（为何要怀古？）你写这些有什么用啊？</p>
<p>（消极的态度）能缓解受到的痛吗？</p>
<p>雾蒙和夕阳，山河的意象</p>
<p>为何你要驻足于这件穷乡僻壤？</p>
<p>笔锋的抑扬，诗句的力量。</p>
<p>泛黄的宣纸向无力的凄凉。</p>
<p>你若赋过名堂，何必曾去叹那越中鹧鸪。</p>
<p>你曾醉听萧鼓，为何忧虑今宵酒醒何处？</p>
<p>我笔下咏诗三两篇，观轮回反反复复。</p>
<p>清风嗔我没个斤两偏钟情于翻乱书牍。</p>
<p>我虚有拙作三两篇，不必去赞叹熟读。</p>
<p>人不过在世数十年，那便难得糊涂。</p>
<p>（人为何要怀古？）是赏花煮酒不美吗？</p>
<p>（为何要怀古？）你快给我住嘴吧！</p>
<p>（为何要怀古？）你写这些有什么用啊？</p>
<p>（消极的态度）能缓解受到的痛吗？</p>
<p>（你为何要怀古？）总要有人去赴会吧！</p>
<p>（为何要怀古？）你真的丝毫无悔吗？</p>
<p>（为何要怀古？）你写这些有什么用啊？</p>
<p>（消极的态度）后人会把你歌颂吗？</p>
]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>怀古</tag>
      </tags>
  </entry>
  <entry>
    <title>推荐项目</title>
    <url>/2023/08/11/%E6%8E%A8%E8%8D%90%E9%A1%B9%E7%9B%AE/</url>
    <content><![CDATA[<p>【Java毕设】手把手教你从零写Spring Boot电商项目<br>楠哥教你学Java<br><a href="https://pan.baidu.com/s/1Ij_GLP3z_fAEDABzcnuYBg">https://pan.baidu.com/s/1Ij_GLP3z_fAEDABzcnuYBg</a><br>提取码: maac</p>
<p>B站最通俗易懂手把手SpringBoot+Vue项目实战-前后端分离博客项目-Java项目<br>三更草堂<br><a href="https://gitee.com/wu_shengdong/blog">https://gitee.com/wu_shengdong/blog</a></p>
<p>求求你简历别写电商了吧，面试官都看腻了，推荐6个Java实战项目<br>我是程序汪<br>3个物流仓储系统<br>1.jeewms<br><a href="https://gitee.com/erzhongxmu/jeewms?_from=gitee_search">https://gitee.com/erzhongxmu/jeewms?_from=gitee_search</a><br>2.基于SSM框架的仓库管理系统<br><a href="https://gitee.com/yangshare/warehouseManager?_from=gitee_search">https://gitee.com/yangshare/warehouseManager?_from=gitee_search</a><br>3.立体仓库WMS<br><a href="https://gitee.com/deerwms/deer-wms-2?_from=gitee_search">https://gitee.com/deerwms/deer-wms-2?_from=gitee_search</a><br>智慧物业系统<br><a href="https://gitee.com/chowa/ejyy">https://gitee.com/chowa/ejyy</a><br>1 互联网类O2O<br><a href="https://pan.baidu.com/s/1djb2BmP3S6l9OfzT62Nd6A">https://pan.baidu.com/s/1djb2BmP3S6l9OfzT62Nd6A</a> 提取码：lry9<br>2 物联网类<br><a href="https://gitee.com/kerwincui/wumei-smart">https://gitee.com/kerwincui/wumei-smart</a><br>3 进销存类<br><a href="https://gitee.com/jishenghua/JSH_ERP?_from=gitee_search">https://gitee.com/jishenghua/JSH_ERP?_from=gitee_search</a><br>4 视频类<br><a href="https://gitee.com/javaex/yaoqishan?_from=gitee_search">https://gitee.com/javaex/yaoqishan?_from=gitee_search</a><br><a href="https://github.com/user-xiangpeng/yaoqishan">https://github.com/user-xiangpeng/yaoqishan</a><br>5 教育类<br><a href="https://gitee.com/mindskip/uexam">https://gitee.com/mindskip/uexam</a><br>6 物流类<br><a href="https://gitee.com/jian_bo_bai/cable__xinrun_logistics?_from=gitee_search">https://gitee.com/jian_bo_bai/cable__xinrun_logistics?_from=gitee_search</a></p>
<p>黑马程序员Java项目实战《瑞吉外卖》，轻松掌握springboot + mybatis plus开发核心技术的真java实战项目<br>黑马程序员<br><a href="https://pan.baidu.com/s/1bxEy2bHiCYQtouifUppsTA&pwd=1234">https://pan.baidu.com/s/1bxEy2bHiCYQtouifUppsTA&amp;pwd=1234</a></p>
<p>selectlist   insert  selectbyid  updatebyid  deletebyid  deletebatchids<br>arrays.aslist  wrapper   querywrapper   lambdaquerywrapper<br>querywrapper<user> wrapper&#x3D;new querywrapper&lt;&gt;();<br>wrapper.eq(“”,””);<br>mapper.selectlist(wrapper);<br>wrapper.eq(user::setname,””);</p>
<p>web层  service层  dao层</p>
]]></content>
      <tags>
        <tag>项目</tag>
      </tags>
  </entry>
  <entry>
    <title>简历技能</title>
    <url>/2023/08/07/%E7%AE%80%E5%8E%86%E6%8A%80%E8%83%BD/</url>
    <content><![CDATA[<ol>
<li><p>   具有扎实的Java基础，熟悉掌握面向对象编程思想、集合、泛型、IO流、多线程、反射。</p>
</li>
<li><p>   熟练掌握Spring、SpringMVC、MyBatis、MyBatisPlus等框架，熟悉对其进行整合为SSM，熟悉Spring的控制反转、依赖注入、面向切面编程等使用。</p>
</li>
<li><p>   熟练掌握SpringBoot框架快速构建项目，对项目进行热部署，多环境开发配置，使用常用的注解开发，RESTful的编码风格。</p>
</li>
<li><p>   熟练掌握SpringCloudAlibaba框架搭建微服务架构，熟悉其组件Nacos、OpenFeign、Sentinel、Gateway、Ribbon、Sleuth、Zipkin的功能和使用。</p>
</li>
<li><p>   熟练使用RabbitMQ消息队列，进行应用解耦，异步提速，削峰填谷，熟悉多种消息模式。</p>
</li>
<li><p>   熟练使用SpringSecurity和JWT安全框架，通过RBAC进行认证和授权，熟悉使用token登录认证。</p>
</li>
<li><p>   熟练使用Elasticsearch分布式搜索引擎，通过IK分词器，将中文文本进行分词，方便搜索和聚合。</p>
</li>
<li><p>   熟练掌握 MySQL关系型数据库，Redis非关系型数据库，熟悉SQL语句编写、事务机制、索引，熟悉Redis常用数据类型、AOF和RDB持久化操作机制、主从复制。</p>
</li>
<li><p>   熟悉Docker的基本使用，熟悉容器和镜像的操作，通过挂载实现数据的共享和持久化，熟悉Linux常用命令。</p>
</li>
<li><p>   熟悉Java虚拟机JVM的组成部分、运行时数据区、双亲委派模型、GC垃圾回收。</p>
</li>
<li><p>   熟悉若依框架开发前后端，熟悉使用Vue框架，并配合Element-ui组件库快速开发前端页面。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>简历</category>
      </categories>
      <tags>
        <tag>简历技能</tag>
      </tags>
  </entry>
  <entry>
    <title>简历项目</title>
    <url>/2023/08/07/%E7%AE%80%E5%8E%86%E9%A1%B9%E7%9B%AE/</url>
    <content><![CDATA[<p>一. 佳购商城（2022.10-2023.6）<br>开发环境： jdk1.8+ maven+git+tomcat8<br>技术架构：Mysql+MyBatisPlus+Redis+SpringBoot+ SpringCloud + RabbitMQ +SpringCache +Elasticsearch+SpringSecurity+vue+Element-UI<br>项目描述： 佳购商城是一个电商项目，主要是通过互联网平台为用户提供在线购买和销售商品的服务。项目主要包含：销售前台和电商管理后台。项目的主要模块有：用户模块、轮播模块、商品模块、类别模块、地址模块、收藏模块、购物模块、订单模块。用户模块是用户的登录和注册，轮播模块是对轮播图的展示，商品模块和类别模块是把商品根据类别展示，地址模块是用户对地址的操作，收藏模块是用户收藏的商品，购物模块是用户加入购物车的商品，订单模块是用户订单的内容。<br>技术描述：<br>1.	使用SpringCloud作为后端框架，vue作为前端框架，前后端分离模式。<br>2.	使用MyBatisPlus实现对数据库的增删改查，完成对数据的操作。<br>3.	使用OpenFeign对不同模块进行远程服务调用，使用Nacos作为服务的注册中心。<br>4.	使用SpringCache对商品信息进行缓存，减少查询对数据库的压力。<br>5.	使用Redis对商品模块统计商品的浏览量、销售量，统计数据并生成排行榜。<br>6.	使用RabbitMQ消息队列对数据进行同步，保证数据的一致性。<br>7.	使用Elasticsearch对商品信息进行搜索，提高查询的效率。<br>8.	使用SpringSecurity对用户进行认证和授权，用户只有登录后才能把商品加入购物车或收藏。<br>     二. 智慧云课堂（2022.4-2022.10）<br>开发环境： jdk1.8+ maven+git+tomcat8<br>技术架构： MySql+MyBatisPlus+Redis+SpringBoot+SpringCloud+RabbitMQ+vue+Element-UI<br>项目描述: 智慧云课堂是线上课堂项目，主要功能是提供在线教育服务。项目分为：系统后台和系统前台。系统后台是管理员使用，系统前台是用户使用。后台系统主要有：讲师管理，课程分类管理，点播管理，课程订单，营销管理，直播管理，权限管理。用户通过登录，可以在点播课程和直播课程的模块来学习内容。讲师管理和课程分类管理，是老师人员和课程分类的详细信息。点播管理是老师上传的课程，有付费和免费的课程。课程订单是用户下单的管理，营销管理是活动时的打折销售。直播管理有聊天互动的功能，权限管理对用户的权限进行管理。<br>技术描述：<br>1.	使用分级课程列表对课程展示,通过EasyExcal对Excal导入和导出。<br>2.	使用腾讯云的COS对课程的图片上传，VOD对点播的视频上传。<br>3.	使用Nacos把后端服务注册，SpringCloudGateWay解决前后端跨域问题。<br>4.	使用RabbitMQ将用户的学习记录和课程进度同步到不同的数据中心，以便于用户在不同地方使用课程。<br>5.	使用Redis添加缓存、计数器、排行榜，缓存热门课程信息，课程点击量，热门课程排行。<br>6.	使用Swagger2进行前后端的衔接，规范开发流程。<br>三. 科讯办公系统（2021.12-2022.4）<br>开发环境： jdk1.8+ maven+git+tomcat8<br>技术架构： Mysql+MyBatisPlus+Redis+SpringBoot+SpringSecurity+Activiti+<br>vue+Element-UI<br>项目描述: 科讯办公系统是一套自动化办公系统，主要用于公司员工的日常工作和管理。系统主要包含：管理端和员工端。管理端包含：权限管理、审批管理、公众号菜单管理等功能。员工端包含：办公审批、微信授权登录、消息推送等功能。项目中也包括考勤打卡、代办记录、业务人员状态等办公辅助型功能。<br>技术描述：<br>1.	使用MD5对登录的密码进行加密处理，JWT生成token实现用户登录。<br>2.	使用SpringSecurity对后端接口进行用户认证和用户授权，自定义拦截方法不同的用户分配不同的角色操作不同的菜单。<br>3.	使用Activiti工作流，按照预定义的规则完成审批的流程，完成管理端的审批管理模块的编写。<br>4.	使用Activiti工作流，完成员工端的审批分类、记录提交信息、查询代办任务、显示审批详情、查询已处理任务等功能。<br>5.	使用Swagger2进行前后端的衔接，规范开发流程。<br>四. 美食快送（2021.6-2021.12）<br>开发环境： jdk1.8+ maven+git+tomcat8<br>技术架构：Mysql+MyBatisPlus+Redis+Nginx+SpringBoot+SpringSession+Spring+SpringMVC+<br>vue+Element-UI<br>项目描述: 美食快送是一个外卖项目，主要用于餐饮的移动应用程序订购并送餐到指定地址的餐品。项目主要包括系统管理后台和移动端应用两部分。其中系统管理后台主要提供给餐饮企业内部员工使用，可以对餐厅的菜品、套餐、订单等进行管理维护。移动端应用主要提供给消费者使用，可以在线浏览菜品、添加购物车、下单等。<br>技术描述：<br>1.	使用Nginx实现服务端的负载均衡。<br>2.	使用SpringMVC的拦截器检验用户是否登录。<br>3.	使用MyBatisPlus的分页插件对数据进行分页查询。<br>4.	使用Redis设置有效期保存手机验证码。<br>5.	使用ThreadLocal保存和获取当前登录的用户id。<br>五. 牙科医疗项目（2020.6-2021.6）<br>开发环境： jdk1.8+ maven+git+tomcat8<br>技术架构： Mysql+Mybatis+Spring+SpringMVC+jQuery+Eachart+EasyUI<br>项目描述: 牙科医疗项目是医疗项目，主要用于提供一系列的牙科医疗服务。项目中有三个大的模块分为病历模块，付款和账单模块，角色管理模块。病历模块主要给医生办公用，对患者的一些信息进行录入，和开具治疗方案。付款和账单模块主要给用户使用，用户可以通过在线平台或移动应用程序在线支付诊疗费用，并管理个人的账单信息。角色管理模块主要给公司其他办公人员使用，主要是对公司岗位的一些层级管理。<br>技术描述：<br>1.	使用Shiro进行系统部分功能的权限控制。<br>2.	使用RESTfulAPI实现患者的预约管理、医生的诊断处理、管理员的系统管理等。<br>3.	使用POI进行表单的导出和导入。<br>4.	使用Eachart进行医生的诊断数量和财务分析报表的分析和可视化展示。<br>5.	使用jQuery实现表单验证、数据提交、异步加载等操作。</p>
]]></content>
      <categories>
        <category>简历</category>
      </categories>
      <tags>
        <tag>简历项目</tag>
      </tags>
  </entry>
  <entry>
    <title>组件</title>
    <url>/2023/08/11/%E7%BB%84%E4%BB%B6/</url>
    <content><![CDATA[<p>Shiro：Shiro是一个用于身份验证、授权和加密的框架。<br>Elasticsearch：Elasticsearch是一个分布式搜索和分析引擎，可用于存储、搜索和分析大量的结构化或非结构化数据。<br>POI：POI是一个用于操作Microsoft Office文件的Java库。<br>Highcharts：Highcharts是一个用于制作交互式图表的JavaScript库。<br>Element-UI：Element-UI是一个基于Vue.js的组件库，提供了丰富的UI组件和交互效果。<br>Swagger2：Swagger2是一个API文档工具，可以生成和展示API的描述信息。<br>fastjson：fastjson是一种用于JSON格式数据的Java库。<br>JWT：JWT（JSON Web Token）是一种用于身份验证和授权的标准，通常用于在客户端和服务器之间传递信息。<br>Activiti：Activiti是一个开源的BPM（Business Process Management）框架，用于实现工作流和业务流程管理。<br>Nginx：nginx是一款常用的Web服务器和反向代理服务软件。<br>Redis：Redis是一款高性能的开源内存数据库。<br>Spring Security：Spring Security是基于Spring框架的安全认证和授权框架。<br>Nacos：Nacos是一款开源的服务发现和配置管理平台。<br>Spring Cloud Gateway：Spring Cloud Gateway是基于Spring Framework 5、Project Reactor和Spring Boot 2的API网关。<br>腾讯云对象存储（COS）：腾讯云对象存储（COS）是一种高可靠、高扩展性、低成本的云存储服务。<br>腾讯云点播（VOD）：腾讯云点播（VOD）是一种基于云技术的视频服务。<br>EasyExcel：EasyExcel是一款基于Java语言的Excel操作类库，能够快速、灵活地处理Excel文件，支持读取和写入多种格式的Excel文件。<br>MyBatis-Plus：MyBatis-Plus是一款基于MyBatis的增强工具，提供了多种实用的功能和特性。<br>Keepalived：Keepalived是一款Linux平台上常用的高可用性解决方案，可以实现多个服务器之间的状态同步和自动故障切换等功能。<br>Vue：Vue（也称为Vue.js）是一款流行的JavaScript框架，用于开发用户界面和单页应用程序。<br>JVM：JVM代表Java虚拟机（Java Virtual Machine），是一个在计算机上运行Java程序的虚拟机。<br>GC：”垃圾回收” (Garbage Collection) - 是一种计算机程序技术，用于自动管理动态分配的内存，并在没有被引用时释放无用的内存。<br>Docker：Docker是一种开源的容器化平台，用于运行和管理应用程序。<br>Linux：Linux是一种开源的Unix-like操作系统内核。<br>Maven：Maven是一个开源的项目管理和构建工具，用于管理Java项目中的依赖关系、构建过程和文档生成等任务。<br>Git：Git是一种开源的分布式版本控制系统，最初由Linus Torvalds创建。<br>MySQL：MySQL是一种开源的关系型数据库管理系统（RDBMS），最初由瑞典公司MySQL AB开发。<br>RabbitMQ：RabbitMQ是一种开源的消息队列（message broker）软件，它用于在不同的应用程序和服务之间传递消息。<br>OpenFeign：OpenFeign是一种基于Java的声明式HTTP客户端框架，用于简化服务之间的通信。<br>Sentinel：Sentinel是一种开源的分布式系统的流量控制、熔断和降级的框架，由阿里巴巴集团开源。<br>Seata：Seata是一种开源的分布式事务解决方案，它可以解决跨多个数据源、多个服务实例的事务管理问题。<br>Spring Boot：Spring Boot是一种基于Spring框架的开源、快速开发的Java Web框架。<br>Spring MVC：Spring MVC是一种基于Spring框架的开源Web应用程序框架，它提供了一套Model-View-Controller（MVC）设计模式的实现，用于构建灵活、高效的Web应用程序。<br>Spring：Spring是一种开源的Java应用程序框架，它由Rod Johnson在2003年创建。<br>MyBatis：MyBatis（原名为ibatis）是一种开源的Java持久化框架，它提供了一套简单易用、高性能且功能强大的API，可用于访问关系型数据库。</p>
]]></content>
      <tags>
        <tag>组件</tag>
      </tags>
  </entry>
  <entry>
    <title>简历项目8月</title>
    <url>/2023/08/11/%E7%AE%80%E5%8E%86%E9%A1%B9%E7%9B%AE8%E6%9C%88/</url>
    <content><![CDATA[<p>一. 智慧云课堂（2023.1-2023.7）<br>开发环境： jdk1.8+ maven+git+tomcat8<br>技术架构： MySql+MyBatisPlus+Redis+SpringBoot+SpringCloud+RabbitMQ+vue+Element-UI<br>项目描述: 智慧云课堂是线上课堂项目，主要功能是提供在线教育服务。项目分为：系统后台和系统前台。系统后台是管理员使用，系统前台是用户使用。后台系统主要有：讲师管理，课程分类管理，点播管理，课程订单，营销管理，直播管理，权限管理。用户通过登录，可以在点播课程和直播课程的模块来学习内容。讲师管理和课程分类管理，是老师人员和课程分类的详细信息。点播管理是老师上传的课程，有付费和免费的课程。课程订单是用户下单的管理，营销管理是活动时的打折销售。直播管理有聊天互动的功能，权限管理对用户的权限进行管理。<br>技术描述：</p>
<ol>
<li>使用SpringCloud作为后端框架，vue作为前端框架，前后端分离模式。</li>
<li>使用MyBatisPlus实现对数据库的增删改查，完成对数据的操作。</li>
<li>使用分级课程列表对课程展示,通过EasyExcal对Excal导入和导出。</li>
<li>使用腾讯云的COS对课程的图片上传，VOD对点播的视频上传。 </li>
<li>使用Nacos把后端服务注册，SpringCloudGateWay解决前后端跨域问题。 </li>
<li>使用Redis添加缓存、计数器、排行榜，缓存热门课程信息，课程点击量，热门课程排行。</li>
<li>使用SpringCache对课程信息进行缓存，减少查询对数据库的压力。</li>
<li>使用RabbitMQ将用户的学习记录和课程进度同步到不同的数据中心，以便于用户在不同地方使用课程。</li>
<li>使用Elasticsearch对课程信息进行搜索，提高查询的效率。</li>
<li>使用Swagger2进行前后端的衔接，规范开发流程。<br>二. 皖事通文件交换平台（2022.6-2023.1）<br>开发环境： jdk1.8+ maven+git+tomcat8<br>技术架构：Mysql+MyBatisPlus+Redis+SpringBoot+ SpringCloud + RabbitMQ +SpringCache +vue+Element-UI<br>项目描述： 该平台主要实现用户在皖事通提交的文件信息推送给其他需要审核的地市，实现文件交换。其中文件传送的过程中还涉及文件的解压，拆分，压缩，备份过程，例如用户提交的一个压缩文件中有excel文件，有word文件，还有pdf文件，需要对这些文件进行筛选，然后推给不同的地市审核，最后收集所有的审核结果在皖事通进行进度展示。<br>技术描述：</li>
<li>负责日常需求开发迭代和技术文档的编写（从 0 到 1 开发的项目）。</li>
<li>封装自定义注解+aop+分布式锁，解决页面重复提交问题。设计分布式锁解决集群启动时定时任务重复扫描任务进行库表数据交换。</li>
<li>参与搭建rediscluster集群，并引入redis数据结构做缓存。</li>
<li>使用责任链模式优化文件操作流程，链式进行文件操作，操作完成后链式删除备份文件，方便后期扩展和维护。</li>
<li>优化申请页面展示速度，由4-5秒展示优化到1秒左右展示。</li>
<li>使用多线程异步回调机制异步获取广告插入皖事通申请页面。<br>三. 牙科医疗项目（2021.12-2022.6）<br>开发环境： jdk1.8+ maven+git+tomcat8<br>技术架构： Mysql+Mybatis+Spring+SpringMVC+jQuery+Eachart+EasyUI<br>项目描述: 牙科医疗项目是医疗项目，主要用于提供一系列的牙科医疗服务。项目中有三个大的模块分为病历模块，付款和账单模块，角色管理模块。病历模块主要给医生办公用，对患者的一些信息进行录入，和开具治疗方案。付款和账单模块主要给用户使用，用户可以通过在线平台或移动应用程序在线支付诊疗费用，并管理个人的账单信息。角色管理模块主要给公司其他办公人员使用，主要是对公司岗位的一些层级管理。<br>技术描述：</li>
<li>使用Shiro进行系统部分功能的权限控制。</li>
<li>使用RESTfulAPI实现患者的预约管理、医生的诊断处理、管理员的系统管理等。</li>
<li>使用POI进行表单的导出和导入。</li>
<li>使用Eachart进行医生的诊断数量和财务分析报表的分析和可视化展示。</li>
<li>使用jQuery实现表单验证、数据提交、异步加载等操作。<br>四. OA办公系统（2021.7-2021.12）<br>开发环境： jdk1.8+ maven+git+tomcat8<br>技术架构： Mysql+MyBatisPlus+Redis+SpringBoot+SpringSecurity+Activiti+vue+Element-UI<br>项目描述: OA办公系统是一套自动化办公系统，主要用于公司员工的日常工作和管理。系统主要包含：管理端和员工端。管理端包含：权限管理、审批管理、公众号菜单管理等功能。员工端包含：办公审批、微信授权登录、消息推送等功能。项目中也包括考勤打卡、代办记录、业务人员状态等办公辅助型功能。<br>技术描述：</li>
<li>使用MD5对登录的密码进行加密处理，JWT生成token实现用户登录。</li>
<li>使用SpringSecurity对后端接口进行用户认证和用户授权，自定义拦截方法不同的用户分配不同的角色操作不同的菜单。 </li>
<li>使用Activiti工作流，按照预定义的规则完成审批的流程，完成管理端的审批管理模块的编写。  </li>
<li>使用Activiti工作流，完成员工端的审批分类、记录提交信息、查询代办任务、显示审批详情、查询已处理任务等功能。</li>
<li>使用Swagger2进行前后端的衔接，规范开发流程。</li>
</ol>
]]></content>
      <tags>
        <tag>简历项目</tag>
      </tags>
  </entry>
  <entry>
    <title>网址</title>
    <url>/2023/08/11/%E7%BD%91%E5%9D%80/</url>
    <content><![CDATA[<p>做笔记了：<br>码市：<a href="https://codemart.com/">https://codemart.com</a><br>开源众包<a href="https://zb.oschina.net/">https://zb.oschina.net</a><br>猪八戒<a href="https://zbj.com/">https://zbj.com</a><br>程序员客栈<a href="https://www.proginn.com/">https://www.proginn.com</a><br>猿急送<a href="https://www.yuanjisong.com/">https://www.yuanjisong.com</a></p>
]]></content>
      <tags>
        <tag>网址</tag>
      </tags>
  </entry>
  <entry>
    <title>记事本01</title>
    <url>/2023/08/11/%E8%AE%B0%E4%BA%8B%E6%9C%AC01/</url>
    <content><![CDATA[<p>权限管理模块，用户登录，获取用户信息，通过jwt生成token，整合框架springsecurity把权限管理进一步实现，springsecurity完成用户认证和用户授权。权限有三种，页面权限，操作权限，数据权限。菜单级的权限，粗粒度的权限，不同角色用户进入系统之后，可以看到不同的菜单。管理员可以看到全部，销售只能看到销售的。操作权限是按钮级，细粒度权限，具体功能按钮，添加，修改，删除等。用户表，角色表，菜单表，用户角色关系表，角色菜单关系表。<br>使用用户登录，登录之后获取用户操作的菜单权限，进行显示和相关操作。<br>实现后端的接口：用户登录，登录后获取用户可以操作的菜单<br>用户接口分析：根据用户名查询数据库，是否存在，如果存在，判断用户是否禁用<br>登录成功之后保持登录状态，基于token实现，使用登录信息生成唯一的字符串，对生成<br>进行编码加密处理放到cookie中，从cookie获取用户信息<br>cookie不能跨域传递，前端和后端端口不一样。<br>cookie的值放到请求头，每次从请求头获取信息。<br>jwt  json web  token 令牌<br>登录之后，获取用户可以操作菜单     从请求头获取token，从字符串获取用户id<br>根据用户id查询，用户可以操作菜单和按钮<br>jwt头  有效载荷   签名哈希  头部有签名的算法  类型jwt  载荷放入你要存的信息，比如用户id<br>签名哈希通过指定算法生成   base64  jwt防止信息被伪造<br>用jwt第一步：引入依赖 jjwt  创建jwt帮助类  jwthelper<br>生成token<br>设置字符串的有效时间   签名加密的秘钥<br>分类    设置token有效时长   设置主体部分  id和名称  签名和压缩<br>从生成的token中获取id<br>判断  stringutils.isempty(token)  解密<br>从生成的token中获取name<br>登录的接口<br>获取用户名和密码   getone  lambdawarapper<br>判断用户名是否存在   对密码进行加密  md5.encrypt<br>判断密码是否一样  把输入的密码也加密<br>判断用户是否被禁用0&#x3D;&#x3D;&#x3D;1<br>判断用户的角色和菜单<br>从请求<br>request.getHeader(“header”)<br>filter  过滤器   方法级的过滤器   最底端   异常过滤器   对&#x2F;login的post请求做拦截</p>
<p>springcloud :Hoxton   springboot :2.3.x<br>@LoadBalanced<br>ribbon</p>
]]></content>
      <tags>
        <tag>记事本</tag>
      </tags>
  </entry>
  <entry>
    <title>记事本02</title>
    <url>/2023/08/11/%E8%AE%B0%E4%BA%8B%E6%9C%AC02/</url>
    <content><![CDATA[<p>jps<br>jmap -heap<br>jconsole<br>jvitualvm</p>
<p>vue create wms01<br>cd wms01<br>npm run serve<br>npm i element-ui -S</p>
<p>interface  abstract </p>
<p>链接：<a href="https://pan.xunlei.com/s/VNZ7-a6GK02kEjRV11jTf6lqA1">https://pan.xunlei.com/s/VNZ7-a6GK02kEjRV11jTf6lqA1</a> 提取码：vzgh 复制这段内容后打开手机迅雷App，查看更方便</p>
]]></content>
      <tags>
        <tag>记事本</tag>
      </tags>
  </entry>
  <entry>
    <title>记事本03</title>
    <url>/2023/08/11/%E8%AE%B0%E4%BA%8B%E6%9C%AC03/</url>
    <content><![CDATA[<p>create_time   timestamp		CURRENT_TIMESTAMP<br>update_time   timestamp		CURRENT_TIMESTAMP<br>create user ‘123456‘@’127.0.0.1’ identified by ‘123456’;<br>grant replication slave on <em>.</em> to ‘123456‘@’127.0.0.1’;<br>show master status;<br> File  STAR-bin.000034<br>Position  19171<br> systemctl start docker<br>vi &#x2F;etc&#x2F;resolv.conf<br>docker pull mysql:8.0.27<br>docker images<br>mkdir ~&#x2F;mysql<br> cd ~&#x2F;mysql<br> docker run -id \</p>
<blockquote>
<p>-p 3306:3306 <br>–name&#x3D;mysql01 <br>-v $PWD&#x2F;conf:&#x2F;etc&#x2F;mysql&#x2F;conf.d <br>-v $PWD&#x2F;logs:&#x2F;logs <br>-v $PWD&#x2F;data:&#x2F;var&#x2F;lib&#x2F;mysql <br>-e MYSQL_ROOT_PASSWORD&#x3D;123456 <br>mysql:8.0.27<br> docker exec -it mysql01 &#x2F;bin&#x2F;bash<br>mysql -uroot -p<br>show databases;<br>change master to master_host&#x3D;’127.0.0.1’,master_user&#x3D;’123456’, master_password&#x3D;’123456’,master_log_file&#x3D;’STAR-bin.000034’,master_log_pos&#x3D;19171;<br>change master to master_host&#x3D;’127.0.0.1’,master_user&#x3D;’123456’, master_password&#x3D;’123456’,master_log_file&#x3D;’STAR-bin.000034’,master_log_pos&#x3D;21232;<br>change master to master_host&#x3D;’127.0.0.1’,master_user&#x3D;’123456’, master_password&#x3D;’123456’,master_log_file&#x3D;’mysql-bin.000002’,master_log_pos&#x3D;395;<br>stop slave;<br> start slave;<br>show slave status;<br> SELECT @@server_id as SERVER_ID;<br>GRANT REPLICATION SLAVE ON <em>.</em> to ‘123456‘@’%’ identified by ‘123456’;<br>use mysql;<br>select host ,user from user;<br>&#x2F;etc&#x2F;my.cnf &#x2F;etc&#x2F;mysql&#x2F;my.cnf ~&#x2F;.my.cnf<br>master_host&#x3D;’192.168.138.100 ‘, master_user&#x3D; ‘xiaoming ‘ , master_password&#x3D; ‘Root@123456’ ,master_log_file&#x3D;</p>
</blockquote>
]]></content>
      <tags>
        <tag>记事本</tag>
      </tags>
  </entry>
  <entry>
    <title>记事本04</title>
    <url>/2023/08/11/%E8%AE%B0%E4%BA%8B%E6%9C%AC04/</url>
    <content><![CDATA[<p>Mozilla&#x2F;5.0 (Windows NT 6.1; Trident&#x2F;7.0; rv:11.0) like Gecko;<br>npm install -g @vue&#x2F;cli<br>get-ExecutionPolicy<br>start-process PowerShell -verb runas<br>set-ExecutionPolicy RemoteSigned<br>get-ExecutionPolicy<br>vue create wms-web<br>cd wms-web<br>npm run dev<br>npm i element-ui -S<br>npm install axios –save<br>npm i <a href="mailto:&#x76;&#117;&#101;&#45;&#x72;&#x6f;&#x75;&#x74;&#101;&#x72;&#x40;&#x33;&#46;&#53;&#46;&#x34;">&#x76;&#117;&#101;&#45;&#x72;&#x6f;&#x75;&#x74;&#101;&#x72;&#x40;&#x33;&#46;&#53;&#46;&#x34;</a><br>npm i <a href="mailto:&#x76;&#117;&#101;&#120;&#x40;&#51;&#46;&#x30;&#46;&#48;">&#x76;&#117;&#101;&#120;&#x40;&#51;&#46;&#x30;&#46;&#48;</a><br>com.itheima</p>
<p>硅谷课堂项目视频<br>B站直达：<a href="https://www.bilibili.com/video/BV13T411372x">https://www.bilibili.com/video/BV13T411372x</a><br>百度网盘：<a href="https://pan.baidu.com/s/1SSh5oGfzW2X7PMF9QvoELw?pwd=yyds">https://pan.baidu.com/s/1SSh5oGfzW2X7PMF9QvoELw?pwd=yyds</a> 提取码：yyds<br>阿里云盘：<a href="https://www.aliyundrive.com/s/rKWiadocFfo%EF%BC%88%E6%95%99%E7%A8%8B%E9%85%8D%E5%A5%97%E8%B5%84%E6%96%99%E8%AF%B7%E4%BB%8E%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E4%B8%8B%E8%BD%BD%EF%BC%89">https://www.aliyundrive.com/s/rKWiadocFfo（教程配套资料请从百度网盘下载）</a></p>
<p>围观尚硅谷Java课程：<a href="http://www.atguigu.com/kecheng.shtml">http://www.atguigu.com/kecheng.shtml</a><br>更多尚硅谷视频教程请访问：<a href="http://www.atguigu.com/download.shtml">http://www.atguigu.com/download.shtml</a><br>1.25磅<br>extends继承    implements实现   implements  implements   extends   extends  input  output<br>public  final  abstract    abstract   final   extends  implements indexof  charat  replace   trim  split  getbytes  length  tolowercase  touppercase   substring  equals stringbuffer  stringbuilder   reverse  append  string byte  short int long double float boolean  char  round  hashcode() object jdk jre bio nio channel aio  exists  createfile  delete  copy  move  size  read<br>size  read  write  collection  list  arraylist  linkedlist vector<br>set hashset  treeset  hashmap  linkedhashmap  treemap  concurrenthashmap  hashtable  collection  collections  list   set   map   key  value  Arrays.asList(array)   queue  poll  remove iterator  thread  runnable  callable<br>sleep  wait  notify    notifyall  run  start  threadpoolexecutor<br>submit  execute  synchronized  synchronized  struts  sql  responsebody  preparedstatement  throw  throws  final   finally  finalize  try-catch-finally<br>forward   redirect   tcp udp osi  context  core   dao  aop  web   webmvc<br>setter  构造方法注入   bean singleton  prototype   request  session  global-session  no  bytype  autodetect autowired  requestmapping springboot<br>springcloud  propertites innodb myiasm<br>groupId   artifactId  version   properties  dependencies  connector<br>junit   slf4j-api  logback-classic  logback-core   logback.xml  mybatis-config.xml   UserMapper.xml  additivity  namespace  typeAliases  environments  dataSource  mappers  resultType<br>src\main\webapp<br>源码下载云盘链接: 链接：<br><a href="https://pan.baidu.com/s/1djb2BmP3S6l9OfzT62Nd6A">https://pan.baidu.com/s/1djb2BmP3S6l9OfzT62Nd6A</a> 提取码：lry9</p>
<p>复制这段内容后打开百度网盘手机App，操作更方便哦<br>crossorigin:克rua丝欧津<br>cors:可而丝<br>jsonp:杰森p<br>get  post  osi  tcp  udp<br>forward:佛沃的<br>redirect:锐滴ruai克特<br>pointer:泼in特<br>exception:一克赛普审<br>try catch<br>finally:fai了里<br>final finally finalize<br>throw:丝肉     throws<br>csrf  xss  sql<br>prepared:普锐的派耳的 statement<br>spring mvc<br>struts:丝jwua丝<br>cookie session<br>page  request session  application<br>request response pagecontext session application out config page exception<br>jsp servlet<br>cloneable serializable<br>cglib<br>spring aop<br>hibernate:还波累特<br>mock rpc<br>atomic:唉它密克<br>volatile   native<br>synchronized  reentrantlock lock  volatile threadlocal<br>thread runnable callable<br>new runnable blocked waiting timed_waiting terminated<br>sleep  wait<br>notify notifyall<br>run  strat<br>threadpoolexecutor<br>execute  submit<br>concurrent<br>monitorenter<br>lterator:因特锐特<br>listlterator collection vector  hashtable stack  queue  poll<br>array arraylist<br>vector:歪克特<br>linkedlist  hashmap  treemap  collection  collections<br>collection list arraylist linkedlist vector  stack set hashset linkedhashset<br>treeset  exists  createfile createdirectory delete copy move size read write<br>bio nio aio extends implements final<br>indexof  charat replace trim split getbytes<br>单例模式  工厂模式  观察者模式  外观模式  状态模式<br>spring  ioc aop 事务支持<br>面向切面编程    spring core context dao web mvc<br>setter属性 构造方法  注解方式<br>singleton  prototype<br>前置控制器  映射控制器  处理器  模型和视图   视图解析器<br>requestmapping  autowired 配置简单 运行独立 自动装配 提供应用监控<br>bootstrap  application<br>properties  yml  devtools<br>ribbon  feign  eureka  hystrix zuul<br>show processlist   explain  dispatcherservlet  handlermapping controller<br>sqlsessionfactory  sqlsession  mysql navicat<br>redis  list  lpush  list  one  1  lpush  list  two  2  lrange  list  0  -1 拿取全部的值  lrange  list  0   1 获取2个    倒着拿取的，从后面往前面拿取<br>maven常用单词：project  modelVersion  groupId  artifactId  version  SNAPSHOT  RELEASE packaging  Basics  dependencies  dependency  compile  provided  runtime  test  exclusions<br>springboot常用单词：SpringBootApplication  SpringApplication getBean redisTemplate Condition  Enable Configuration Bean ComponentScan Import @interface context.getbean  EnableAutoConfiguration<br>startup.cmd -m standalone<br>redis-server redis.windows.conf<br>systemctl start docker<br>docker ps -a<br>docker start ca6fd965509a<br><property name="driver" value="com.mysql.cj.jdbc.Driver"/><br>                <property name="url" value="jdbc:mysql:///abc01?useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;useServerPrepStmts=true"/><br>                <property name="username" value="root"/><br>                <property name="password" value="123456"/><br>useSSL&#x3D;false&amp;useUnicode&#x3D;true&amp;characterEncoding&#x3D;UTF-8&amp;useServerPrepStmts&#x3D;true<br>&#x2F;&#x2F;1. 获取SqlSessionFactory<br>        String resource &#x3D; “mybatis-config.xml”;<br>        InputStream inputStream &#x3D; Resources.getResourceAsStream(resource);<br>        SqlSessionFactory sqlSessionFactory &#x3D; new SqlSessionFactoryBuilder().build(inputStream);</p>
<pre><code>    //2. 获取SqlSession对象
    SqlSession sqlSession = sqlSessionFactory.openSession();

    //3. 获取Mapper接口的代理对象
    UserMapper brandMapper = sqlSession.getMapper(UserMapper.class);

    //4. 执行方法
    List&lt;User&gt; user = brandMapper.selectAll();
    System.out.println(user);

    //5. 释放资源
    sqlSession.close();
</code></pre>
<p>spring Boot<br>Spring Framework<br>Spring Data<br>spring Cloud<br>Spring Cloud Data Flow<br>spring Security<br>Spring Authorization Server<br>spring for GraphQL<br>Spring Session<br>Spring Integration<br>Spring HATEOAS<br>Spring REST Docs<br>Spring Batch<br>Spring AMQP<br>spring CredHub<br>Spring Flo<br>Spring for Apache Kafka<br>Spring LDAP<br>Spring Shell<br>spring Statemachine</p>
<p>.&#x2F;mongod –dbpath&#x3D;..\data\db<br>shiro elasticsearch poi highcharts element nginx activiti rsa jwt ajax swagger2<br>mybatisplus easyexcal cos vod nacos springcloudgateway keepalived springsecurity jwt redis inner join left join right join<br>强调的是列的原子性    要求实体的属性完全依赖于主关键字  任何非主属性不依赖于其它非主属性<br>byte short int long float double boolean char<br>方法名 参数列表 返回类型 必须相同 访问修饰符 (public&gt;protected&gt;default&gt;private)<br>重写 重载  equals与&#x3D;&#x3D;的区别 hashcode list 有序可重复 set 无序不可重复<br>string stringbuffer stringbuilder arraylist linkedlist collection<br>泛型  四种创建对象 new 反射  clone 序列化 开放定址法 再哈希 拉链法 static try catch finally return finally excption error oom sof bio同步阻塞io nio同步非阻塞channel aio<br>反射机制是在运行时，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意个对象，都能够调用它的任意一个方法。class.forname()<br>类名.class   对象名.getClass()   setAccessible(true)<br>enableautoconfiguration  componentscan  starter<br>reverse indexof() charAt()<br>jdk和jre<br>&#x3D;&#x3D;和equals<br>hashcode()<br>final<br>IO<br>BIO、NIO、AIO<br>Files<br>collection<br>list set map<br>hashmap<br>hashset<br>arraylist linkedlist<br>数组和list<br>double[] a&#x3D;new double[]{}<br>int[] b&#x3D;new int[]{}<br>int[] c&#x3D;{}<br>数组变量名中存储的是数组在内存中的地址，数组是引用类型。<br><a href="https://www.bilibili.com/video/BV1WY4y1H7d3?p=14&spm_id_from=pageDriver&vd_source=c6b8b78d53ad1898051d946c0af958c7">https://www.bilibili.com/video/BV1WY4y1H7d3?p=14&amp;spm_id_from=pageDriver&amp;vd_source=c6b8b78d53ad1898051d946c0af958c7</a></p>
<p>1.使用Sentinel实现分布式环境下接口的流量限制与服务熔断，保证服务的高可用。<br>2.使用Sleuth实现分布式环境下链路追踪，方便团队开发人员快速定位问题与接口性能问题的发现。<br>3.使用xxl-job任务调度框架实现定时定点日志处理分析，并将错误日志反馈到开发人员监控面板。<br>4.使用Ajax异步编程的方式实现局部更新的功能，展示数据时使用fastJson快速解析Json数据。<br>5.使用Swagger2进行前后端的衔接，规范开发流程。</p>
<p>activiti入门   工作流  预定义的规则  完整的审批流程  填写请假条  部门经理审批  总经理审批<br>人事备案   使用状态值进行表示<br>vue-admin-template<br>MySQL和Excel是两种不同的数据处理工具，它们各自有自己的优劣势和适用场景。</p>
<p>MySQL是一种关系型数据库管理系统，可以存储和管理大量结构化数据，提供高效的数据检索和查询功能，适合处理大型数据集，支持多用户访问和操作，有良好的安全性和可靠性。MySQL可以通过编写SQL语句来进行复杂的数据操作和计算，同时支持自动化处理和批量处理。</p>
<p>Excel是一种电子表格软件，适合处理小到中等规模的数据集，具有良好的可视化功能和易用性，可以进行快速的数据分析和可视化展示。Excel提供了各种内置函数和工具，可以方便地进行数据处理和计算，同时也支持自定义函数和宏的编写。</p>
<p>因此，对于不同的数据处理需求，MySQL和Excel都有其各自的优势。如果需要处理大量结构化数据并进行复杂的数据操作和查询，以及多用户协同操作，那么MySQL更适合；如果需要进行快速的数据分析和可视化展示，以及对数据进行手动修改和编辑，那么Excel更适合。 </p>
<h2 id="peoplemomo-Sakuraapplication-properties-和-application-ymlserver-port-8080优先级-properties-yml-yamlvalue-“-name-”-value-“-person-name-”-字符串-name-abc-数据-address-bejingcomponent-cofigurationproperties-prefix-”person”"><a href="#peoplemomo-Sakuraapplication-properties-和-application-ymlserver-port-8080优先级-properties-yml-yamlvalue-“-name-”-value-“-person-name-”-字符串-name-abc-数据-address-bejingcomponent-cofigurationproperties-prefix-”person”" class="headerlink" title="peoplemomo Sakuraapplication.properties 和 application.ymlserver.port&#x3D;8080优先级 properties&gt;yml&gt;yamlvalue (“${name}”)   value (“${person.name}”)    字符串 name:abc  数据  address:  -bejingcomponent  cofigurationproperties(prefix&#x3D;”person”)"></a>people<br>momo Sakura<br>application.properties 和 application.yml<br>server.port&#x3D;8080<br>优先级 properties&gt;yml&gt;yaml<br>value (“${name}”)   value (“${person.name}”)    字符串 name:abc  数据  address:  -bejing<br>component  cofigurationproperties(prefix&#x3D;”person”)</h2><h2 id="server-port-8081"><a href="#server-port-8081" class="headerlink" title="server:   port:8081"></a>server:<br>   port:8081</h2><p>spring:<br>   profiles:<br>      active:pro</p>
<p>spring.profiles.active&#x3D;pro<br>git pull<br>git pull origin master<br>git pull origin master –allow-unrelated-histories</p>
<p> docker run -d -p 6379:6379 –name redis redis:6.2.10</p>
<p>docker run -d -i -t <IMAGE ID> &#x2F;bin&#x2F;bash</p>
<p>docker exec -it <CONTAINER ID> bash</p>
<p> docker run -d -p 5001:22 –name centos7aaa –privileged&#x3D;true centos7aa:latest &#x2F;usr&#x2F;sbin&#x2F;init</p>
<p>docker exec -it centos7aaa &#x2F;bin&#x2F;bash</p>
<p>service sshd status</p>
<p>netstat -antp | grep sshd</p>
<p>microsoft store</p>
<p>steam:caidaole</p>
<p>update account set money &#x3D; money -500 where name &#x3D; ‘’</p>
<p>‘ or ‘1’&#x3D;’1</p>
<p>1.使用Shiro进行系统部分功能的权限控制。<br>2.使用了Ajax方式实现在单页面内完成增删改查功能。<br>3.使用了ElasticSearch进行药品明细的查询。<br>4.使用POI进行表单的导出和导入。<br>5.使用Highcharts进行查询和财务分析报表的打印。</p>
]]></content>
      <tags>
        <tag>记事本</tag>
      </tags>
  </entry>
  <entry>
    <title>面试题</title>
    <url>/2023/08/11/%E9%9D%A2%E8%AF%95%E9%A2%98/</url>
    <content><![CDATA[<p>JDK和JRE有什么区别？<br>&#x3D;&#x3D;和equals的区别是什么？<br>两个对象的hashCode()相同，则equals()也一定为true,对吗？<br>final在java中有什么作用？<br>java中的Math.round(-1.5)等于多少？<br>String属于基础的数据类型吗？<br>java中操作字符串都有哪些类？他们之间有什么区别？<br>String str&#x3D;”i”与String str&#x3D;new String(“i”)一样吗？<br>如何将字符串反转？<br>String类的常用方法都有哪些？<br>抽象类必须要有抽象方法吗？<br>普通类和抽象类有哪些区别？<br>抽象类能使用final修饰吗？<br>接口和抽象类有什么区别？<br>java种IO流分为几种？<br>BIO、NIO、AIO有什么区别？<br>Files的常用方法都有哪些？<br>java容器都有哪些？<br>Collection和Collections有什么区别？<br>List、Set、Map之间的区别是什么？<br>HashMap和HashTable有什么区别？<br>如何决定使用HashMap还是TreeMap？<br>说一下HashMap的实现原理？<br>说一下HashSet的实现原理？<br>ArrayList和linkedlist的区别是什么？<br>如何实现数组和list之间的转换？<br>ArrayList和Vector的区别是什么？<br>在Queue中poll()和remove()有什么区别？<br>哪些集合类是线程安全的？<br>迭代器Iterator是什么？<br>Iterator怎么使用？有什么特点？<br>Iterator和ListIterator有什么区别？<br>怎么确保一个集合不能被修改？<br>并行和并发有什么区别？<br>线程和进程的区别？<br>守护线程是什么？<br>创建线程有哪几种方式？<br>说一下runnable和callable有什么区别？<br>线程有哪些状态？<br>sleep()和wait()有什么区别？<br>notify()和notifyAll()有什么区别？<br>线程的run()和start()有什么区别？<br>创建线程池有哪几种方式？<br>线程池都有哪些状态？<br>线程池中submit()和execute()方法有什么区别？<br>在java程序中怎么保证多线程的运行安全？<br>多线程中synchronized锁升级的原理是什么？<br>什么是死锁？<br>怎么防止死锁？<br>ThreadLocal是什么？<br>说一下synchronized底层实现原理？<br>synchronized和volatile的区别是什么？<br>synchronized和lock有什么区别？<br>synchronized和reentrantlock区别是什么？<br>说一下atomic的原理？<br>什么是反射？<br>什么是java序列化？什么情况下需要序列化？<br>动态代理是什么？有哪些应用？<br>怎么实现动态代理？<br>为什么要使用克隆？<br>深拷贝和浅拷贝区别是什么？<br>jsp和servlet有什么区别？<br>jsp有哪些内置对象？作用分别是什么？<br>说一下jsp的4种作用域？<br>session和cookie有什么区别？<br>说一下session的工作原理？<br>springmvc和struts的区别是什么？<br>如何避免sql注入？<br>什么是xss攻击，如何避免？<br>什么是csrf攻击，如何避免？<br>throw和throws的区别？<br>final、finally、finalize有什么区别？<br>try-catch-finally中哪个部分可以省略？<br>常用的异常类有哪些？<br>http响应码301和302代表的是什么？有什么作用？<br>forward和redirect的区别？<br>简述tcp和udp的区别？<br>tcp为什么要三次握手，两次不行吗？为什么？<br>说一下tcp粘包是怎么产生的？<br>osi的七层模型都有哪些？<br>get和post请求有哪些区别？</p>
]]></content>
      <tags>
        <tag>面试题</tag>
      </tags>
  </entry>
  <entry>
    <title>面试题02</title>
    <url>/2023/08/11/%E9%9D%A2%E8%AF%95%E9%A2%9802/</url>
    <content><![CDATA[<h5 id="为什么2个对象的hashcode-会相同"><a href="#为什么2个对象的hashcode-会相同" class="headerlink" title="为什么2个对象的hashcode()会相同"></a>为什么2个对象的hashcode()会相同</h5><p>在Java中，hashcode()方法是用来返回对象的哈希码的。每个对象都应该有一个唯一的哈希码。然而，在某些情况下，两个不同的对象可能会返回相同的哈希码。</p>
<p>这种情况通常被称为哈希冲突。哈希冲突发生的原因是因为哈希函数将不同的输入映射到相同的输出。在Java中，Object类中提供的默认实现的hashcode()方法只返回对象的内存地址，这样就很容易出现哈希冲突的情况。</p>
<p>如果要避免哈希冲突，可以重写hashcode()方法，确保相同的对象返回相同的哈希码，而不同的对象返回不同的哈希码。</p>
<h5 id="哈希冲突的原因"><a href="#哈希冲突的原因" class="headerlink" title="哈希冲突的原因"></a>哈希冲突的原因</h5><p>哈希冲突的主要原因是哈希函数的输入域大于输出域。这意味着有不同的输入值可以映射到相同的输出值。</p>
<p>此外，当使用散列表（hash table）时，也可能会出现哈希冲突。散列表是一种数据结构，用于存储键值对。散列表内部包含一个数组和一个哈希函数。</p>
<p>在散列表中，键通过哈希函数转换为索引，然后在数组中存储对应的值。由于哈希函数的输入域大于输出域，这意味着多个键可能会映射到同一个索引位置，从而产生哈希冲突。</p>
<p>哈希冲突的解决方法包括：</p>
<ul>
<li>重新设计哈希函数</li>
<li>使用更好的散列算法</li>
<li>增加散列表的容量，使其能够容纳更多的元素</li>
</ul>
<h5 id="如何解决哈希冲突"><a href="#如何解决哈希冲突" class="headerlink" title="如何解决哈希冲突"></a>如何解决哈希冲突</h5><p>哈希冲突是指两个不同的对象拥有相同的哈希码。解决哈希冲突的方法通常有以下几种：</p>
<ol>
<li>开放定址法</li>
</ol>
<p>开放定址法是一种解决哈希冲突的方法，它会尝试找到下一个可用的散列槽来存储冲突的元素。这可以通过简单地检查下一个空位来实现。</p>
<ol>
<li>链地址法</li>
</ol>
<p>链地址法是一种解决哈希冲突的方法，它将多个元素存储在同一个散列槽中，并使用链表或其他数据结构来连接这些元素。当出现哈希冲突时，只需将新元素添加到已有元素的链表末尾即可。</p>
<ol>
<li>双重散列</li>
</ol>
<p>双重散列是一种解决哈希冲突的方法，它使用两个哈希函数来计算键的索引位置。如果第一个哈希函数产生了冲突，则使用第二个哈希函数计算新的索引位置。</p>
<p>总之，解决哈希冲突的方法有很多种，每种方法都有其适用的情况。在选择解决哈希冲突的方法时，需要考虑以下因素：</p>
<ul>
<li>散列表的大小</li>
<li>数据集的大小</li>
<li>期望的性能和效率</li>
</ul>
]]></content>
      <tags>
        <tag>面试题</tag>
      </tags>
  </entry>
  <entry>
    <title>面试题03</title>
    <url>/2023/08/11/%E9%9D%A2%E8%AF%95%E9%A2%9803/</url>
    <content><![CDATA[<p>面试题重点要记得的东西：<br>JDK、JRE、JVM的区别？<br>JDK、JRE和JVM都是Java的三个核心概念，它们分别代表什么以及它们之间的关系如下：</p>
<p>JDK（Java Development Kit）：是Java开发工具包，它包含了Java语言的编译器、调试器、文档生成器等工具，以及与平台无关的类库。JDK中包含了JRE，所以它可以编写Java程序并运行。</p>
<p>JRE（Java Runtime Environment）：是Java运行时环境，它包含了JVM（Java虚拟机）和Java核心类库等，用于执行Java程序。JRE只能运行Java程序，无法编译Java程序，因为它不包含编译器。</p>
<p>JVM（Java Virtual Machine）：是Java虚拟机，它是Java程序运行的环境。JVM可以看作是一个解释器，用于将Java代码翻译成机器能够理解的指令。在不同的操作系统上，JVM也有不同的实现。</p>
<p>可以这样理解它们之间的关系：JDK是Java开发者必须安装的开发工具，它包含了Java语言的完整开发包，其中包含了JRE；而JRE是运行Java程序必须的环境，只要安装了JRE，就可以运行Java程序了；而JVM则是负责将Java程序转化为特定平台可以执行的二进制代码的软件，它是JRE的一部分。<br>hashcode和equals的区别？<br>HashCode和Equals都是Java中Object类的方法，用于比较对象是否相等。它们的作用和区别如下：</p>
<p>HashCode是用于返回对象的哈希码值，而Equals是用于判断两个对象是否相等。</p>
<p>HashCode方法返回的是一个int类型的数值，表示对象的哈希码（用于散列集合的一些操作）；而Equals方法返回的是一个boolean类型的值，表示两个对象是否相等。</p>
<p>如果两个对象相等（根据Equals方法的定义），那么它们的哈希码值一定相同；但如果两个对象哈希码值相同，并不一定代表它们相等。</p>
<p>通常，在重写Equals方法时，也需要同时重写HashCode方法，以保证在使用散列数据结构（如HashMap、HashTable等）时能够正确地存储和检索对象。</p>
<p>HashCode方法和Equals方法之间的关系通常是，如果两个对象的Equals方法返回值相等，那么它们的HashCode方法返回值也应该相等。但反之并不一定成立。</p>
<p>总之，HashCode和Equals方法都是用于比较对象是否相等的方法，但是Hashcode方法主要用于散列数据结构的一些操作，而Equals方法则用于判断两个对象是否具有相同的特征。重写这两个方法是为了更好地控制自定义对象在Map、Set等集合中的行为。<br>String、StringBuffer、StringBuilder的区别？<br>String、StringBuffer和StringBuilder都是Java中常用的字符串类，它们有以下区别：</p>
<p>String是一个不可变的字符串对象。一旦被创建，就不能再被修改了。因为String对象不可变，所以每次对String进行修改时，都会生成一个新的对象。因此，频繁的字符串操作会导致大量无用的String对象的创建，会浪费内存空间。</p>
<p>StringBuffer是一个可变的字符串对象，它可以修改自己内部的字符序列。它通过同步来保证线程安全，因此效率较低，适合在多线程情况下使用。</p>
<p>StringBuilder也是一个可变的字符串对象，它和StringBuffer很相似，但是没有采用同步策略，因此效率更高，适合在单线程环境下使用。</p>
<p>String类和StringBuilder&#x2F;StringBuffer类的方法接口基本相同，但是StringBuilder&#x2F;StringBuffer类的方法返回值并不是this，而是对自身的一个引用，这样可以支持链式调用。</p>
<p>综上所述，如果需要进行字符串拼接等频繁的字符串操作，应该使用StringBuilder；如果需要在多线程环境下进行字符串操作，应该使用StringBuffer。而如果字符串不需要修改，则可以使用String，它具有不可变性，可以提高执行效率。<br>&#x3D;&#x3D;和equals方法的区别？<br>在Java中，“&#x3D;&#x3D;”和“equals()”方法都可以用于比较两个对象是否相等，但它们有以下不同：</p>
<p>“&#x3D;&#x3D;”运算符用于比较两个变量的值是否相等，也可用于比较基本数据类型的值和两个对象引用是否指向同一个对象。如果两个对象的内存地址相同，则返回true；否则返回false。</p>
<p>“equals()”方法是Object类中定义的方法，用于比较两个对象的实际内容是否相同。默认情况下，equals()方法使用“&#x3D;&#x3D;”运算符比较两个对象的内存地址。但是，它可以被子类重写以便进行具体的内容比较。</p>
<p>对于基本数据类型（如int、double等），它们之间可以使用“&#x3D;&#x3D;”运算符进行比较；而对于对象类型，通常需要使用equals()方法进行比较。</p>
<p>在使用“&#x3D;&#x3D;”运算符比较两个对象时，只要两个对象的内存地址相同，即使它们的值不同，也会被视为相等；而在使用equals()方法比较两个对象时，如果它们的实际内容不同，即使它们的内存地址相同，也会被视为不相等。</p>
<p>一些Java集合类，如HashSet和HashMap，使用equals()方法来比较不同元素之间的相等性，而不是使用“&#x3D;&#x3D;”运算符。</p>
<p>总之，“&#x3D;&#x3D;”运算符用于比较变量的值和对象引用的地址是否相等，而equals()方法用于比较对象的实际内容是否相同。<br>重载和重写的区别？<br>重载（Overloading）和重写（Overriding）都是Java面向对象编程中常用的概念，它们的区别如下：</p>
<p>重载是指在同一个类中允许存在多个同名但参数类型或个数不同的方法，它们可以拥有不同的返回值类型、访问修饰符等，用于满足不同的需求。重载方法应该在参数列表上有所不同以便能够区分它们。</p>
<p>重写是指子类重新定义父类的某个方法，使得子类中该方法的实现覆盖了原来的父类实现，但是方法的名称、返回值类型、参数类型和个数必须与被重写的父类方法相同，具体的实现可以不同。</p>
<p>在重载过程中，方法名一般相同，但参数类型或个数不同；而在重写过程中，方法名和参数类型、个数均必须相同。</p>
<p>重载只与方法签名有关，与返回值类型、访问修饰符等无关；而重写则需要保持返回值类型、访问权限、异常类型等与父类相同。</p>
<p>重载是静态绑定的过程，发生在编译期；而重写是动态绑定的过程，发生在运行时。</p>
<p>简单来说，重载是指方法名称相同，但是参数类型或个数不同，用于满足不同的需求。而重写是指子类覆盖父类的方法，具有相同的方法名称、参数类型和返回值类型，但是实现可以不同，用于实现多态。<br>ArrayList和LinkedList区别？<br>ArrayList和LinkedList都是Java集合框架中常用的列表类，它们之间的区别如下：</p>
<p>ArrayList是基于数组实现的列表，而LinkedList则是基于链表实现的列表。</p>
<p>在ArrayList中，元素在内存空间上是连续的，可以通过下标进行随机访问。因此，适用于随机读取、遍历操作较多的场景；而LinkedList则需要通过指针进行遍历，不能进行随机访问，更适用于插入、删除等操作频繁的场景。</p>
<p>在插入、删除操作时，ArrayList由于需要移动元素位置，所以效率较低；而LinkedList只需要改变指针指向，效率相对较高。</p>
<p>对于查找操作，ArrayList使用二分查找算法可以较快地定位到某个位置；而LinkedList则需要遍历整个链表才能找到某个元素，查找效率相对较低。</p>
<p>对于空间占用方面，ArrayList在添加元素时需要先申请一块连续的内存空间，在无法获得足够的连续空间时，需要进行数组的拷贝和扩容操作，可能会增加时间和空间的开销；而LinkedList则不需要预先分配空间，只有在添加元素时才会占用额外的空间。</p>
<p>综上所述，选择ArrayList还是LinkedList基于操作特征，如果需要进行随机读取、遍历操作较多的场景，可以选择ArrayList；如果需要进行插入、删除操作频繁的场景，可以选择LinkedList。<br>单例Bean和单例模式的区别？<br>单例Bean和单例模式是两个不同的概念，它们的区别如下：</p>
<p>单例Bean是指在Spring中被定义为单例的Bean，也就是说，在整个应用程序中只存在一个该Bean的实例对象。当我们在配置文件或注解中将Bean的作用范围设置为singleton时，就相当于将其定义为单例Bean。单例Bean可以避免频繁创建对象的开销，只需在容器启动时创建一次即可。</p>
<p>单例模式是一种设计模式，它保证一个类只能有一个实例对象，并提供了全局访问该对象的方法。通常情况下，我们通过私有构造函数、静态方法和静态变量来实现单例模式。</p>
<p>单例Bean和单例模式之间最大的区别在于其使用场景和目的不同。Spring的单例Bean主要是为了避免频繁创建对象的开销，提高系统性能和效率；而单例模式则是通过保证同一个类只创建一个实例对象，来确保全局唯一性和数据一致性。</p>
<p>在实现上，Spring的单例Bean是由Spring容器来管理的，在需要时从容器中获取对象实例；而单例模式是由类自己负责管理，通过静态方法来获取唯一的实例。</p>
<p>总之，单例Bean和单例模式是两个不同的概念，它们的目的和实现方式都是不同的。单例Bean主要是为了提高系统性能和效率，而单例模式则是为了保证全局唯一性和数据一致性。<br>Spring中的Bean创建的生命周期有哪些步骤？<br>在Spring中，Bean创建的生命周期主要包括以下步骤：</p>
<p>实例化阶段：当Spring容器接收到Bean的定义时，会实例化该Bean的对象，并创建出相应的Bean实例。</p>
<p>属性赋值阶段：在实例化Bean之后，Spring容器会利用依赖注入（Dependency Injection）将Bean所需的属性值和依赖注入进来。这个过程可以通过构造函数、Setter方法、自动装配等不同方式完成。</p>
<p>初始化阶段：在所有的属性被设置好之后，Spring容器会对Bean进行初始化，调用Bean的初始化方法，其中包括InitializingBean接口的afterPropertiesSet方法以及自定义的init-method方法（如果有定义）。</p>
<p>使用阶段：在初始化结束后，Bean就可以被使用了，它会一直保留在Spring容器中供其他对象使用。</p>
<p>销毁阶段：当容器关闭时，Spring容器会销毁所有的Bean对象，释放占用的资源。这个过程会调用Bean的销毁方法，包括DisposableBean接口的destroy方法以及自定义的destroy-method方法（如果有定义）。</p>
<p>总体来说，Spring的Bean创建生命周期包括了实例化、属性赋值、初始化、使用和销毁等几个关键步骤，分别掌握每个步骤的具体细节，可以帮助我们更好地理解Spring框架的运作机制，并更好地利用Spring来进行应用程序开发。<br>ApplicationContext和BeanFactory有什么区别？<br>ApplicationContext和BeanFactory都是Spring框架中用于管理Bean对象的容器，二者的主要区别如下：</p>
<p>初始化时间：ApplicationContext在容器启动时会立即初始化所有的Bean对象，而BeanFactory则是在第一次访问某个Bean时才会进行实例化。因此，ApplicationContext的启动速度较慢，但能够提供更快的访问速度。</p>
<p>功能上的区别：ApplicationContext继承自BeanFactory接口，并在此基础上增加了很多面向应用的功能特性，例如国际化、消息资源、AOP等。相比之下，BeanFactory提供的仅仅是Bean的基本管理和助手服务。</p>
<p>配置文件的扫描范围：ApplicationContext可以自动进行组件扫描，自动扫描classpath下面的指定路径或包下的class文件，自动将其转化为 Bean。而在 BeanFactory中需要手动注册每一个类或者需要使用配置文件明确说明哪些类需要被处理，比较繁琐。</p>
<p>生命周期：ApplicationContext是在Web应用启动时创建的，生命周期结束时也会关闭，因此它会随着Web应用的启动和停止而周期性地创建和销毁。而BeanFactory是单例的，它只在应用程序开始时创建一次，直到应用程序关闭才会释放Bean。</p>
<p>性能：由于ApplicationContext在启动时进行了所有Bean对象的预加载和初始化，所以相对于BeanFactory而言，在运行时的性能方面要优于后者。</p>
<p>总体上来看，ApplicationContext是BeanFactory的一个超集，提供了更多的高级特性，而且启动速度可能会慢一些，但它提供了更好的轻量级的容器解决方案。如果应用需要使用到AOP、消息资源处理、基于注解的的容器扫描等功能，那么建议使用ApplicationContext容器。</p>
]]></content>
      <tags>
        <tag>面试题</tag>
      </tags>
  </entry>
  <entry>
    <title>面试题04</title>
    <url>/2023/08/11/%E9%9D%A2%E8%AF%95%E9%A2%9804/</url>
    <content><![CDATA[<p>说一下ArrayList和LinkedList的区别<br>说一下HashMap的put方法<br>说一下ThreadLocal<br>说一下jvm中哪些是共享区，哪些可以作为gc root<br>你们项目如何排查jvm问题<br>如何查看线程死锁<br>线程之间如何进行通讯的<br>说一下spring的事务机制<br>什么时候@Transactional失效<br>Dubbo是如何做系统交互的<br>Dubbo的负载均衡策略<br>jdk1.7到jdk1.8HashMap发生了什么变化<br>jdk1.7到jdk1.8java虚拟机发生了什么变化<br>如何实现aop,项目哪些地方用到了aop<br>spring中的后置处理器的作用<br>说说常用的springboot注解，及其实现<br>说说你了解的分布式锁实现<br>redis的数据结构及使用场景<br>redis集群策略<br>mysql数据库中，什么情况下设置了索引但无法使用<br>innodb是如何实现事务的<br>java死锁如何避免<br>深拷贝和浅拷贝<br>ConcurrentHashMap的扩容机制<br>Spring中Bean是线程安全的吗<br>说说你常用的linux基本命令<br>maven中package和install的区别<br>springcloud各组件功能，与Dubbo区别<br>说说类加载器双亲委派模型<br>泛型中extends和super的区别<br>并发编程三要素<br>spring用到了哪些设计模式<br>简述CAP理论<br>图的深度遍历和广度遍历<br>快排算法<br>TCP的三次握手和四次挥手<br>消息队列如何保证消息可靠传输</p>
]]></content>
      <tags>
        <tag>面试题</tag>
      </tags>
  </entry>
</search>
